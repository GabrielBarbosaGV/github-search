{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0","program":"/home/gabriel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","mockall","--edition=2018","/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=86b7369d1bfa5220","-C","extra-filename=-86b7369d1bfa5220","--out-dir","/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps","-L","dependency=/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps","--extern","cfg_if=/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps/libcfg_if-5b9b3cb1bf3d00dc.rmeta","--extern","downcast=/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps/libdowncast-384682c887e26a4f.rmeta","--extern","fragile=/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps/libfragile-71963288ac547bca.rmeta","--extern","lazy_static=/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps/liblazy_static-bc2f47adaad103e9.rmeta","--extern","mockall_derive=/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps/libmockall_derive-33995a780ecd92ec.so","--extern","predicates=/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps/libpredicates-8031dcba7075a23f.rmeta","--extern","predicates_tree=/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps/libpredicates_tree-a767f313e3faea14.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gabriel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gabriel/Personal/Study/2021.1/TG/github-search/seed-generator/target/rls/debug/deps/libmockall-86b7369d1bfa5220.rmeta"},"prelude":{"crate_id":{"name":"mockall","disambiguator":[2042624510076129434,0]},"crate_root":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src","external_crates":[{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":20,"id":{"name":"downcast","disambiguator":[17587921582277706481,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":21,"id":{"name":"fragile","disambiguator":[9638299823660404550,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":22,"id":{"name":"lazy_static","disambiguator":[9708458161320227382,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":23,"id":{"name":"predicates","disambiguator":[16682450649671785579,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":24,"id":{"name":"predicates_core","disambiguator":[12973036699223054018,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":25,"id":{"name":"float_cmp","disambiguator":[6052368431773524437,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":26,"id":{"name":"num_traits","disambiguator":[5021245875313719693,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":27,"id":{"name":"normalize_line_endings","disambiguator":[10413054302515878589,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":28,"id":{"name":"difflib","disambiguator":[16770691572498881801,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":29,"id":{"name":"itertools","disambiguator":[14183009802745421225,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":30,"id":{"name":"either","disambiguator":[6249056396793946519,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":31,"id":{"name":"regex","disambiguator":[7488512276368990994,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":32,"id":{"name":"regex_syntax","disambiguator":[12498114466809790836,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":33,"id":{"name":"aho_corasick","disambiguator":[12494989826519295785,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":34,"id":{"name":"memchr","disambiguator":[8531325220416081113,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":35,"id":{"name":"predicates_tree","disambiguator":[4859915670711982221,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":36,"id":{"name":"termtree","disambiguator":[14905185055136331244,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":37,"id":{"name":"mockall_derive","disambiguator":[2972289079850010228,0]}},{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","num":38,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}}],"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14,"byte_end":45641,"line_start":2,"line_end":1656,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":33},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32188,"byte_end":32191,"line_start":1145,"line_end":1145,"column_start":20,"column_end":23},"alias_span":null,"name":"Any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":75},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32193,"byte_end":32201,"line_start":1145,"line_end":1145,"column_start":25,"column_end":33},"alias_span":null,"name":"Downcast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":40},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32236,"byte_end":32243,"line_start":1147,"line_end":1147,"column_start":18,"column_end":25},"alias_span":null,"name":"Fragile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":38},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32313,"byte_end":32324,"line_start":1151,"line_end":1151,"column_start":22,"column_end":33},"alias_span":null,"name":"lazy_static","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":519},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32362,"byte_end":32381,"line_start":1154,"line_end":1154,"column_start":14,"column_end":33},"alias_span":null,"name":"PredicateBooleanExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":7},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32406,"byte_end":32415,"line_start":1156,"line_end":1156,"column_start":9,"column_end":18},"alias_span":null,"name":"Predicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":143},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32417,"byte_end":32432,"line_start":1156,"line_end":1156,"column_start":20,"column_end":35},"alias_span":null,"name":"PredicateBoxExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":697},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32434,"byte_end":32457,"line_start":1156,"line_end":1156,"column_start":37,"column_end":60},"alias_span":null,"name":"PredicateFileContentExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":895},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32459,"byte_end":32474,"line_start":1156,"line_end":1156,"column_start":62,"column_end":77},"alias_span":null,"name":"PredicateStrExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":22},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32484,"byte_end":32493,"line_start":1157,"line_end":1157,"column_start":9,"column_end":18},"alias_span":null,"name":"predicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":9},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":32543,"byte_end":32554,"line_start":1161,"line_end":1161,"column_start":26,"column_end":37},"alias_span":null,"name":"CaseTreeExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":601},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":35077,"byte_end":35085,"line_start":1256,"line_end":1256,"column_start":25,"column_end":33},"alias_span":null,"name":"automock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":37,"index":600},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":36959,"byte_end":36963,"line_start":1329,"line_end":1329,"column_start":25,"column_end":29},"alias_span":null,"name":"mock","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14,"byte_end":45641,"line_start":2,"line_end":1656,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":94},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":98},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":119},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":141},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":144}],"decl_id":null,"docs":" A powerful mock object library for Rust.","sig":null,"attributes":[{"value":"/ A powerful mock object library for Rust.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14,"byte_end":58,"line_start":2,"line_end":2,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":59,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Mockall provides tools to create mock versions of almost any trait","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":63,"byte_end":133,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ or struct. They can be used in unit tests as a stand-in for the real","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":134,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ object.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":207,"byte_end":218,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":219,"byte_end":222,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":223,"byte_end":234,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":235,"byte_end":238,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ There are two ways to use Mockall.  The easiest is to use","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":239,"byte_end":300,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/ [`#[automock]`](attr.automock.html).  It can mock most traits, or structs","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":301,"byte_end":378,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ that only have a single `impl` block.  For things it can't handle, there is","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":379,"byte_end":458,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`mock!`].","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":459,"byte_end":473,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":474,"byte_end":477,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Whichever method is used, the basic idea is the same.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":478,"byte_end":535,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ * Create a mock struct.  It's name will be the same as the original, with","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":536,"byte_end":613,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   \"Mock\" prepended.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":614,"byte_end":637,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/ * In your test, instantiate the mock struct with its `new` or `default`","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":638,"byte_end":713,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/   method.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":714,"byte_end":727,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ * Set expectations on the mock struct.  Each expectation can have required","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":728,"byte_end":806,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   argument matchers, a required call count, and a required position in a","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":807,"byte_end":883,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/   [`Sequence`].  Each expectation must also have a return value.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":884,"byte_end":952,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Supply the mock object to the code that you're testing.  It will return","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":953,"byte_end":1030,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/   the preprogrammed return values supplied in the previous step.  Any","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1031,"byte_end":1104,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/   accesses contrary to your expectations will cause a panic.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1105,"byte_end":1169,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1170,"byte_end":1173,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # User Guide","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1174,"byte_end":1190,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1191,"byte_end":1194,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * [`Getting started`](#getting-started)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1195,"byte_end":1238,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ * [`Static Return values`](#static-return-values)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1239,"byte_end":1292,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ * [`Matching arguments`](#matching-arguments)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1293,"byte_end":1342,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/ * [`Call counts`](#call-counts)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1343,"byte_end":1378,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ * [`Sequences`](#sequences)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1379,"byte_end":1410,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ * [`Checkpoints`](#checkpoints)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1411,"byte_end":1446,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ * [`Reference arguments`](#reference-arguments)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1447,"byte_end":1498,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/ * [`Reference return values`](#reference-return-values)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1499,"byte_end":1558,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/ * [`impl Trait`](#impl-trait)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1559,"byte_end":1592,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ * [`Mocking structs`](#mocking-structs)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1593,"byte_end":1636,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ * [`Generic methods`](#generic-methods)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1637,"byte_end":1680,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ * [`Methods with generic lifetimes`](#methods-with-generic-lifetimes)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1681,"byte_end":1754,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ * [`Generic traits and structs`](#generic-traits-and-structs)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1755,"byte_end":1820,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/ * [`Associated types`](#associated-types-1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1821,"byte_end":1868,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ * [`Multiple and inherited traits`](#multiple-and-inherited-traits)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1869,"byte_end":1940,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/ * [`External traits`](#external-traits)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1941,"byte_end":1984,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/ * [`Static methods`](#static-methods)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":1985,"byte_end":2026,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ * [`Modules`](#modules)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2027,"byte_end":2054,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ * [`Foreign functions`](#foreign-functions)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2055,"byte_end":2102,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ * [`Debug`](#debug)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2103,"byte_end":2126,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/ * [`Async Traits`](#async-traits)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2127,"byte_end":2164,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ * [`Crate features`](#crate-features)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2165,"byte_end":2206,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/ * [`Examples`](#examples)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2207,"byte_end":2236,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2237,"byte_end":2240,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ## Getting Started","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2241,"byte_end":2263,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2264,"byte_end":2271,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2272,"byte_end":2291,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/ use mockall::predicate::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2292,"byte_end":2322,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2323,"byte_end":2338,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"/ trait MyTrait {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2339,"byte_end":2358,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/     fn foo(&self, x: u32) -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2359,"byte_end":2396,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2397,"byte_end":2402,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2403,"byte_end":2406,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ fn call_with_four(x: &MyTrait) -> u32 {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2407,"byte_end":2450,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/     x.foo(4)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2451,"byte_end":2467,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2468,"byte_end":2473,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2474,"byte_end":2477,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockMyTrait::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2478,"byte_end":2516,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2517,"byte_end":2538,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/     .with(predicate::eq(4))","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2539,"byte_end":2570,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/     .times(1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2571,"byte_end":2588,"line_start":69,"line_end":69,"column_start":1,"column_end":18}},{"value":"/     .returning(|x| x + 1);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2589,"byte_end":2619,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(5, call_with_four(&mock));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2620,"byte_end":2661,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2662,"byte_end":2669,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2670,"byte_end":2673,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Static Return values","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2674,"byte_end":2701,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2702,"byte_end":2705,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Every expectation must have an associated return value (though when the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2706,"byte_end":2781,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ **nightly** feature is enabled expectations will automatically return the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2782,"byte_end":2859,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ default values of their return types, if their return types implement","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2860,"byte_end":2933,"line_start":78,"line_end":78,"column_start":1,"column_end":74}},{"value":"/ `Default`.).  For methods that return a `static` value, the macros will","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":2934,"byte_end":3009,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ generate an `Expectation` struct like","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3010,"byte_end":3051,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/ [`this`](examples::__mock_MockFoo_Foo::__foo::Expectation).","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3052,"byte_end":3115,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/ There are two ways to set such an expectation's return value: with a","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3116,"byte_end":3188,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ constant","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3189,"byte_end":3201,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/ ([`return_const`](examples::__mock_MockFoo_Foo::__foo::Expectation::return_const))","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3202,"byte_end":3288,"line_start":84,"line_end":84,"column_start":1,"column_end":87}},{"value":"/ or a closure","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3289,"byte_end":3305,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/ ([`returning`](examples::__mock_MockFoo_Foo::__foo::Expectation::returning)).","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3306,"byte_end":3387,"line_start":86,"line_end":86,"column_start":1,"column_end":82}},{"value":"/ A closure will take the method's arguments by value.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3388,"byte_end":3444,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3445,"byte_end":3448,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3449,"byte_end":3456,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3457,"byte_end":3478,"line_start":90,"line_end":90,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3479,"byte_end":3494,"line_start":91,"line_end":91,"column_start":1,"column_end":16}},{"value":"/ trait MyTrait {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3495,"byte_end":3514,"line_start":92,"line_end":92,"column_start":1,"column_end":20}},{"value":"/     fn foo(&self) -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3515,"byte_end":3544,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/     fn bar(&self, x: u32, y: u32) -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3545,"byte_end":3590,"line_start":94,"line_end":94,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3591,"byte_end":3596,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3597,"byte_end":3600,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockMyTrait::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3601,"byte_end":3639,"line_start":97,"line_end":97,"column_start":1,"column_end":39}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3640,"byte_end":3661,"line_start":98,"line_end":98,"column_start":1,"column_end":22}},{"value":"/     .return_const(42u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3662,"byte_end":3691,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/ mock.expect_bar()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3692,"byte_end":3713,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/     .returning(|x, y| x + y);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3714,"byte_end":3747,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3748,"byte_end":3755,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3756,"byte_end":3759,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Additionally, constants that aren't `Clone` can be returned with the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3760,"byte_end":3832,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [`return_once`](examples::__mock_MockFoo_Foo::__foo::Expectation::return_once)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3833,"byte_end":3915,"line_start":105,"line_end":105,"column_start":1,"column_end":83}},{"value":"/ method.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3916,"byte_end":3927,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3928,"byte_end":3931,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3932,"byte_end":3939,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3940,"byte_end":3961,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/ struct NonClone();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3962,"byte_end":3984,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":3985,"byte_end":4000,"line_start":111,"line_end":111,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4001,"byte_end":4016,"line_start":112,"line_end":112,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self) -> NonClone;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4017,"byte_end":4051,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4052,"byte_end":4057,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4058,"byte_end":4061,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4062,"byte_end":4079,"line_start":116,"line_end":116,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4080,"byte_end":4114,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/ let r = NonClone{};","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4115,"byte_end":4138,"line_start":118,"line_end":118,"column_start":1,"column_end":24}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4139,"byte_end":4160,"line_start":119,"line_end":119,"column_start":1,"column_end":22}},{"value":"/     .return_once(move || r);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4161,"byte_end":4193,"line_start":120,"line_end":120,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4194,"byte_end":4201,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4202,"byte_end":4209,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4210,"byte_end":4213,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ `return_once` can also be used for computing the return value with an","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4214,"byte_end":4287,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/ `FnOnce` closure.  This is useful for returning a non-`Clone` value and also","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4288,"byte_end":4368,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ triggering side effects at the same time.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4369,"byte_end":4414,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4415,"byte_end":4418,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4419,"byte_end":4426,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4427,"byte_end":4448,"line_start":129,"line_end":129,"column_start":1,"column_end":22}},{"value":"/ fn do_something() {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4449,"byte_end":4473,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4474,"byte_end":4477,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ struct NonClone();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4478,"byte_end":4500,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4501,"byte_end":4504,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4505,"byte_end":4520,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4521,"byte_end":4536,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self) -> NonClone;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4537,"byte_end":4571,"line_start":136,"line_end":136,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4572,"byte_end":4577,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4578,"byte_end":4581,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4582,"byte_end":4599,"line_start":139,"line_end":139,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4600,"byte_end":4634,"line_start":140,"line_end":140,"column_start":1,"column_end":35}},{"value":"/ let r = NonClone{};","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4635,"byte_end":4658,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4659,"byte_end":4680,"line_start":142,"line_end":142,"column_start":1,"column_end":22}},{"value":"/     .return_once(move || {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4681,"byte_end":4711,"line_start":143,"line_end":143,"column_start":1,"column_end":31}},{"value":"/         do_something();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4712,"byte_end":4739,"line_start":144,"line_end":144,"column_start":1,"column_end":28}},{"value":"/         r","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4740,"byte_end":4753,"line_start":145,"line_end":145,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4754,"byte_end":4765,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4766,"byte_end":4773,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4774,"byte_end":4781,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4782,"byte_end":4785,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Mock objects are always `Send`.  If you need to use a return type that","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4786,"byte_end":4860,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ isn't, you can use the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4861,"byte_end":4887,"line_start":151,"line_end":151,"column_start":1,"column_end":27}},{"value":"/ [`return_const_st`](examples::__mock_MockFoo_Foo::__foo::Expectation::return_const_st),","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4888,"byte_end":4979,"line_start":152,"line_end":152,"column_start":1,"column_end":92}},{"value":"/ [`returning_st`](examples::__mock_MockFoo_Foo::__foo::Expectation::returning_st),","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":4980,"byte_end":5065,"line_start":153,"line_end":153,"column_start":1,"column_end":86}},{"value":"/ or","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5066,"byte_end":5072,"line_start":154,"line_end":154,"column_start":1,"column_end":7}},{"value":"/ [`return_once_st`](examples::__mock_MockFoo_Foo::__foo::Expectation::return_once_st),","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5073,"byte_end":5162,"line_start":155,"line_end":155,"column_start":1,"column_end":90}},{"value":"/ methods. If you need to match arguments that are not `Send`, you can use the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5163,"byte_end":5243,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ [`withf_st`](examples::__mock_MockFoo_Foo::__foo::Expectation::withf_st)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5244,"byte_end":5320,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/ These take a non-`Send` object and add runtime access checks.  The wrapped","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5321,"byte_end":5399,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ object will be `Send`, but accessing it from multiple threads will cause a","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5400,"byte_end":5478,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ runtime panic.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5479,"byte_end":5497,"line_start":160,"line_end":160,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5498,"byte_end":5501,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5502,"byte_end":5509,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5510,"byte_end":5531,"line_start":163,"line_end":163,"column_start":1,"column_end":22}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5532,"byte_end":5554,"line_start":164,"line_end":164,"column_start":1,"column_end":23}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5555,"byte_end":5570,"line_start":165,"line_end":165,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5571,"byte_end":5586,"line_start":166,"line_end":166,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self, x: Rc<u32>) -> Rc<u32>;   // Rc<u32> isn't Send","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5587,"byte_end":5656,"line_start":167,"line_end":167,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5657,"byte_end":5662,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5663,"byte_end":5666,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5667,"byte_end":5684,"line_start":170,"line_end":170,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5685,"byte_end":5719,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ let x = Rc::new(5);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5720,"byte_end":5743,"line_start":172,"line_end":172,"column_start":1,"column_end":24}},{"value":"/ let argument = x.clone();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5744,"byte_end":5773,"line_start":173,"line_end":173,"column_start":1,"column_end":30}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5774,"byte_end":5795,"line_start":174,"line_end":174,"column_start":1,"column_end":22}},{"value":"/     .withf_st(move |x| *x == argument)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5796,"byte_end":5838,"line_start":175,"line_end":175,"column_start":1,"column_end":43}},{"value":"/     .returning_st(move |_| Rc::new(42u32));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5839,"byte_end":5886,"line_start":176,"line_end":176,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(42, *mock.foo(x));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5887,"byte_end":5920,"line_start":177,"line_end":177,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5921,"byte_end":5928,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5929,"byte_end":5936,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5937,"byte_end":5940,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ## Matching arguments","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5941,"byte_end":5966,"line_start":181,"line_end":181,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5967,"byte_end":5970,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Optionally, expectations may have argument matchers set.  A matcher will","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":5971,"byte_end":6047,"line_start":183,"line_end":183,"column_start":1,"column_end":77}},{"value":"/ verify that the expectation was called with the expected arguments, or panic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6048,"byte_end":6128,"line_start":184,"line_end":184,"column_start":1,"column_end":81}},{"value":"/ otherwise.  A matcher is anything that implements the [`Predicate`] trait.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6129,"byte_end":6207,"line_start":185,"line_end":185,"column_start":1,"column_end":79}},{"value":"/ For example:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6208,"byte_end":6224,"line_start":186,"line_end":186,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6225,"byte_end":6228,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6229,"byte_end":6248,"line_start":188,"line_end":188,"column_start":1,"column_end":20}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6249,"byte_end":6270,"line_start":189,"line_end":189,"column_start":1,"column_end":22}},{"value":"/ # use mockall::predicate::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6271,"byte_end":6303,"line_start":190,"line_end":190,"column_start":1,"column_end":33}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":191,"line_end":191,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6320,"byte_end":6335,"line_start":192,"line_end":192,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self, x: u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6336,"byte_end":6366,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6367,"byte_end":6372,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6373,"byte_end":6376,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6377,"byte_end":6411,"line_start":196,"line_end":196,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6412,"byte_end":6433,"line_start":197,"line_end":197,"column_start":1,"column_end":22}},{"value":"/     .with(eq(42))","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6434,"byte_end":6455,"line_start":198,"line_end":198,"column_start":1,"column_end":22}},{"value":"/     .return_const(());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6456,"byte_end":6482,"line_start":199,"line_end":199,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6483,"byte_end":6486,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ mock.foo(0);    // Panics!","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6487,"byte_end":6517,"line_start":201,"line_end":201,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6518,"byte_end":6525,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6526,"byte_end":6529,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ See [`predicate`] for a list of Mockall's builtin predicate functions.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6530,"byte_end":6604,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ For convenience,","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6605,"byte_end":6625,"line_start":205,"line_end":205,"column_start":1,"column_end":21}},{"value":"/ [`withf`](examples::__mock_MockFoo_Foo::__foo::Expectation::withf)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6626,"byte_end":6696,"line_start":206,"line_end":206,"column_start":1,"column_end":71}},{"value":"/ is a shorthand for setting the commonly used","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6697,"byte_end":6745,"line_start":207,"line_end":207,"column_start":1,"column_end":49}},{"value":"/ [`function`] predicate.  The arguments to the predicate function are the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6746,"byte_end":6822,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ method's arguments, *by reference*.  For example:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6823,"byte_end":6876,"line_start":209,"line_end":209,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6877,"byte_end":6880,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6881,"byte_end":6900,"line_start":211,"line_end":211,"column_start":1,"column_end":20}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6901,"byte_end":6922,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6923,"byte_end":6938,"line_start":213,"line_end":213,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6939,"byte_end":6954,"line_start":214,"line_end":214,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self, x: u32, y: u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6955,"byte_end":6993,"line_start":215,"line_end":215,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":6994,"byte_end":6999,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7000,"byte_end":7003,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7004,"byte_end":7021,"line_start":218,"line_end":218,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7022,"byte_end":7056,"line_start":219,"line_end":219,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7057,"byte_end":7078,"line_start":220,"line_end":220,"column_start":1,"column_end":22}},{"value":"/     .withf(|x: &u32, y: &u32| x == y)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7079,"byte_end":7120,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/     .return_const(());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7121,"byte_end":7147,"line_start":222,"line_end":222,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7148,"byte_end":7151,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ mock.foo(2 + 2, 5);    // Panics!","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7152,"byte_end":7189,"line_start":224,"line_end":224,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7190,"byte_end":7197,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7198,"byte_end":7205,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7206,"byte_end":7209,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ### Matching multiple calls","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7210,"byte_end":7241,"line_start":228,"line_end":228,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7242,"byte_end":7245,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ Matchers can also be used to discriminate between different invocations of","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7246,"byte_end":7324,"line_start":230,"line_end":230,"column_start":1,"column_end":79}},{"value":"/ the same function.  Used that way, they can provide different return values","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7325,"byte_end":7404,"line_start":231,"line_end":231,"column_start":1,"column_end":80}},{"value":"/ for different arguments.  The way this works is that on a method call, all","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7405,"byte_end":7483,"line_start":232,"line_end":232,"column_start":1,"column_end":79}},{"value":"/ expectations set on a given method are evaluated in FIFO order.  The first","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7484,"byte_end":7562,"line_start":233,"line_end":233,"column_start":1,"column_end":79}},{"value":"/ matching expectation is used.  Only if none of the expectations match does","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7563,"byte_end":7641,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ Mockall panic.  For example:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7642,"byte_end":7674,"line_start":235,"line_end":235,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7675,"byte_end":7678,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7679,"byte_end":7686,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7687,"byte_end":7708,"line_start":238,"line_end":238,"column_start":1,"column_end":22}},{"value":"/ # use mockall::predicate::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7709,"byte_end":7741,"line_start":239,"line_end":239,"column_start":1,"column_end":33}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7742,"byte_end":7757,"line_start":240,"line_end":240,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7758,"byte_end":7773,"line_start":241,"line_end":241,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self, x: u32) -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7774,"byte_end":7811,"line_start":242,"line_end":242,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7812,"byte_end":7817,"line_start":243,"line_end":243,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7818,"byte_end":7821,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7822,"byte_end":7839,"line_start":245,"line_end":245,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7840,"byte_end":7874,"line_start":246,"line_end":246,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7875,"byte_end":7896,"line_start":247,"line_end":247,"column_start":1,"column_end":22}},{"value":"/     .with(eq(5))","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7897,"byte_end":7917,"line_start":248,"line_end":248,"column_start":1,"column_end":21}},{"value":"/     .return_const(50u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7918,"byte_end":7947,"line_start":249,"line_end":249,"column_start":1,"column_end":30}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7948,"byte_end":7969,"line_start":250,"line_end":250,"column_start":1,"column_end":22}},{"value":"/     .with(eq(6))","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7970,"byte_end":7990,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/     .return_const(60u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":7991,"byte_end":8020,"line_start":252,"line_end":252,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8021,"byte_end":8028,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8029,"byte_end":8036,"line_start":254,"line_end":254,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8037,"byte_end":8040,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ One common pattern is to use multiple expectations in order of decreasing","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8041,"byte_end":8118,"line_start":256,"line_end":256,"column_start":1,"column_end":78}},{"value":"/ specificity.  The last expectation can provide a default or fallback value,","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8119,"byte_end":8198,"line_start":257,"line_end":257,"column_start":1,"column_end":80}},{"value":"/ and earlier ones can be more specific.  For example:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8199,"byte_end":8255,"line_start":258,"line_end":258,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8256,"byte_end":8259,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8260,"byte_end":8267,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8268,"byte_end":8289,"line_start":261,"line_end":261,"column_start":1,"column_end":22}},{"value":"/ # use mockall::predicate::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8290,"byte_end":8322,"line_start":262,"line_end":262,"column_start":1,"column_end":33}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8323,"byte_end":8338,"line_start":263,"line_end":263,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8339,"byte_end":8354,"line_start":264,"line_end":264,"column_start":1,"column_end":16}},{"value":"/     fn open(&self, path: String) -> Option<u32>;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8355,"byte_end":8407,"line_start":265,"line_end":265,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8408,"byte_end":8413,"line_start":266,"line_end":266,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8414,"byte_end":8417,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8418,"byte_end":8452,"line_start":268,"line_end":268,"column_start":1,"column_end":35}},{"value":"/ mock.expect_open()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8453,"byte_end":8475,"line_start":269,"line_end":269,"column_start":1,"column_end":23}},{"value":"/     .with(eq(String::from(\"something.txt\")))","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8476,"byte_end":8524,"line_start":270,"line_end":270,"column_start":1,"column_end":49}},{"value":"/     .returning(|_| Some(5));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8525,"byte_end":8557,"line_start":271,"line_end":271,"column_start":1,"column_end":33}},{"value":"/ mock.expect_open()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8558,"byte_end":8580,"line_start":272,"line_end":272,"column_start":1,"column_end":23}},{"value":"/     .return_const(None);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8581,"byte_end":8609,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8610,"byte_end":8617,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8618,"byte_end":8621,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ## Call counts","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8622,"byte_end":8640,"line_start":276,"line_end":276,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8641,"byte_end":8644,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ By default, every expectation is allowed to be called an unlimited number of","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8645,"byte_end":8725,"line_start":278,"line_end":278,"column_start":1,"column_end":81}},{"value":"/ times.  But Mockall can optionally verify that an expectation was called a","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8726,"byte_end":8804,"line_start":279,"line_end":279,"column_start":1,"column_end":79}},{"value":"/ fixed number of times, or any number of times within a given range.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8805,"byte_end":8876,"line_start":280,"line_end":280,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8877,"byte_end":8880,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8881,"byte_end":8900,"line_start":282,"line_end":282,"column_start":1,"column_end":20}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8901,"byte_end":8922,"line_start":283,"line_end":283,"column_start":1,"column_end":22}},{"value":"/ # use mockall::predicate::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8923,"byte_end":8955,"line_start":284,"line_end":284,"column_start":1,"column_end":33}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8956,"byte_end":8971,"line_start":285,"line_end":285,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8972,"byte_end":8987,"line_start":286,"line_end":286,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self, x: u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":8988,"byte_end":9018,"line_start":287,"line_end":287,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9019,"byte_end":9024,"line_start":288,"line_end":288,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9025,"byte_end":9028,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9029,"byte_end":9063,"line_start":290,"line_end":290,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9064,"byte_end":9085,"line_start":291,"line_end":291,"column_start":1,"column_end":22}},{"value":"/     .times(1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9086,"byte_end":9103,"line_start":292,"line_end":292,"column_start":1,"column_end":18}},{"value":"/     .return_const(());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9104,"byte_end":9130,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9131,"byte_end":9134,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ mock.foo(0);    // Ok","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9135,"byte_end":9160,"line_start":295,"line_end":295,"column_start":1,"column_end":26}},{"value":"/ mock.foo(1);    // Panics!","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9161,"byte_end":9191,"line_start":296,"line_end":296,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9192,"byte_end":9199,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9200,"byte_end":9203,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ See also","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9204,"byte_end":9216,"line_start":299,"line_end":299,"column_start":1,"column_end":13}},{"value":"/ [`never`](examples::__mock_MockFoo_Foo::__foo::Expectation::never) and","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9217,"byte_end":9291,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ [`times`](examples::__mock_MockFoo_Foo::__foo::Expectation::times).","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9292,"byte_end":9363,"line_start":301,"line_end":301,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9364,"byte_end":9367,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ ## Sequences","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9368,"byte_end":9384,"line_start":303,"line_end":303,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9385,"byte_end":9388,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ By default expectations may be matched in any order.  But it's possible to","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9389,"byte_end":9467,"line_start":305,"line_end":305,"column_start":1,"column_end":79}},{"value":"/ specify the order by using a [`Sequence`].  Any expectations may be added to","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9468,"byte_end":9548,"line_start":306,"line_end":306,"column_start":1,"column_end":81}},{"value":"/ the same sequence.  They don't even need to come from the same object.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9549,"byte_end":9623,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9624,"byte_end":9627,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ ```should_panic(expected = \"Method sequence violation\")","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9628,"byte_end":9687,"line_start":309,"line_end":309,"column_start":1,"column_end":60}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9688,"byte_end":9709,"line_start":310,"line_end":310,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9710,"byte_end":9725,"line_start":311,"line_end":311,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9726,"byte_end":9741,"line_start":312,"line_end":312,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9742,"byte_end":9764,"line_start":313,"line_end":313,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9765,"byte_end":9770,"line_start":314,"line_end":314,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9771,"byte_end":9774,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9775,"byte_end":9792,"line_start":316,"line_end":316,"column_start":1,"column_end":18}},{"value":"/ let mut seq = Sequence::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9793,"byte_end":9827,"line_start":317,"line_end":317,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9828,"byte_end":9831,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ let mut mock1 = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9832,"byte_end":9867,"line_start":319,"line_end":319,"column_start":1,"column_end":36}},{"value":"/ mock1.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9868,"byte_end":9890,"line_start":320,"line_end":320,"column_start":1,"column_end":23}},{"value":"/     .times(1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9891,"byte_end":9908,"line_start":321,"line_end":321,"column_start":1,"column_end":18}},{"value":"/     .in_sequence(&mut seq)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9909,"byte_end":9939,"line_start":322,"line_end":322,"column_start":1,"column_end":31}},{"value":"/     .returning(|| ());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9940,"byte_end":9966,"line_start":323,"line_end":323,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9967,"byte_end":9970,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ let mut mock2 = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":9971,"byte_end":10006,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/ mock2.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10007,"byte_end":10029,"line_start":326,"line_end":326,"column_start":1,"column_end":23}},{"value":"/     .times(1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10030,"byte_end":10047,"line_start":327,"line_end":327,"column_start":1,"column_end":18}},{"value":"/     .in_sequence(&mut seq)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10048,"byte_end":10078,"line_start":328,"line_end":328,"column_start":1,"column_end":31}},{"value":"/     .returning(|| ());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10079,"byte_end":10105,"line_start":329,"line_end":329,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10106,"byte_end":10109,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ mock2.foo();    // Panics!  mock1.foo should've been called first.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10110,"byte_end":10180,"line_start":331,"line_end":331,"column_start":1,"column_end":71}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10181,"byte_end":10188,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10189,"byte_end":10196,"line_start":333,"line_end":333,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10197,"byte_end":10200,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ ## Checkpoints","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10201,"byte_end":10219,"line_start":335,"line_end":335,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10220,"byte_end":10223,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ Sometimes its useful to validate all expectations mid-test, throw them away,","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10224,"byte_end":10304,"line_start":337,"line_end":337,"column_start":1,"column_end":81}},{"value":"/ and add new ones.  That's what checkpoints do.  Every mock object has a","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10305,"byte_end":10380,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ `checkpoint` method.  When called, it will immediately validate all methods'","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10381,"byte_end":10461,"line_start":339,"line_end":339,"column_start":1,"column_end":81}},{"value":"/ expectations.  So any expectations that haven't satisfied their call count","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10462,"byte_end":10540,"line_start":340,"line_end":340,"column_start":1,"column_end":79}},{"value":"/ will panic.  Afterwards, those expectations will be cleared so you can add","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10541,"byte_end":10619,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/ new expectations and keep testing.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10620,"byte_end":10658,"line_start":342,"line_end":342,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10659,"byte_end":10662,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10663,"byte_end":10682,"line_start":344,"line_end":344,"column_start":1,"column_end":20}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10683,"byte_end":10704,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10705,"byte_end":10720,"line_start":346,"line_end":346,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10721,"byte_end":10736,"line_start":347,"line_end":347,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10737,"byte_end":10759,"line_start":348,"line_end":348,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10760,"byte_end":10765,"line_start":349,"line_end":349,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10766,"byte_end":10769,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10770,"byte_end":10804,"line_start":351,"line_end":351,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10805,"byte_end":10826,"line_start":352,"line_end":352,"column_start":1,"column_end":22}},{"value":"/     .times(2)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10827,"byte_end":10844,"line_start":353,"line_end":353,"column_start":1,"column_end":18}},{"value":"/     .returning(|| ());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10845,"byte_end":10871,"line_start":354,"line_end":354,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10872,"byte_end":10875,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ mock.foo();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10876,"byte_end":10891,"line_start":356,"line_end":356,"column_start":1,"column_end":16}},{"value":"/ mock.checkpoint();  // Panics!  foo hasn't yet been called twice.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10892,"byte_end":10961,"line_start":357,"line_end":357,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10962,"byte_end":10969,"line_start":358,"line_end":358,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10970,"byte_end":10973,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10974,"byte_end":10993,"line_start":360,"line_end":360,"column_start":1,"column_end":20}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":10994,"byte_end":11015,"line_start":361,"line_end":361,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11016,"byte_end":11031,"line_start":362,"line_end":362,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11032,"byte_end":11047,"line_start":363,"line_end":363,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11048,"byte_end":11070,"line_start":364,"line_end":364,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11071,"byte_end":11076,"line_start":365,"line_end":365,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11077,"byte_end":11080,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11081,"byte_end":11098,"line_start":367,"line_end":367,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11099,"byte_end":11133,"line_start":368,"line_end":368,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11134,"byte_end":11155,"line_start":369,"line_end":369,"column_start":1,"column_end":22}},{"value":"/     .times(1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11156,"byte_end":11173,"line_start":370,"line_end":370,"column_start":1,"column_end":18}},{"value":"/     .returning(|| ());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11174,"byte_end":11200,"line_start":371,"line_end":371,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11201,"byte_end":11204,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ mock.foo();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11205,"byte_end":11220,"line_start":373,"line_end":373,"column_start":1,"column_end":16}},{"value":"/ mock.checkpoint();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11221,"byte_end":11243,"line_start":374,"line_end":374,"column_start":1,"column_end":23}},{"value":"/ mock.foo();         // Panics!  The expectation has been cleared.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11244,"byte_end":11313,"line_start":375,"line_end":375,"column_start":1,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11314,"byte_end":11321,"line_start":376,"line_end":376,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11322,"byte_end":11329,"line_start":377,"line_end":377,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11330,"byte_end":11333,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ ## Reference arguments","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11334,"byte_end":11360,"line_start":379,"line_end":379,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11361,"byte_end":11364,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ Mockall can mock methods with reference arguments, too.  There's one catch:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11365,"byte_end":11444,"line_start":381,"line_end":381,"column_start":1,"column_end":80}},{"value":"/ the matcher [`Predicate`] will take reference arguments by value, not by","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11445,"byte_end":11521,"line_start":382,"line_end":382,"column_start":1,"column_end":77}},{"value":"/ reference.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11522,"byte_end":11536,"line_start":383,"line_end":383,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11537,"byte_end":11540,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11541,"byte_end":11548,"line_start":385,"line_end":385,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11549,"byte_end":11570,"line_start":386,"line_end":386,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11571,"byte_end":11586,"line_start":387,"line_end":387,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11587,"byte_end":11602,"line_start":388,"line_end":388,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self, x: &u32) -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11603,"byte_end":11641,"line_start":389,"line_end":389,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11642,"byte_end":11647,"line_start":390,"line_end":390,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11648,"byte_end":11651,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11652,"byte_end":11686,"line_start":392,"line_end":392,"column_start":1,"column_end":35}},{"value":"/ let e = mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11687,"byte_end":11716,"line_start":393,"line_end":393,"column_start":1,"column_end":30}},{"value":"/     // Note that x is a &u32, not a &&u32","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11717,"byte_end":11762,"line_start":394,"line_end":394,"column_start":1,"column_end":46}},{"value":"/     .withf(|x: &u32| *x == 5)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11763,"byte_end":11796,"line_start":395,"line_end":395,"column_start":1,"column_end":34}},{"value":"/     .returning(|x: &u32| *x + 1);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11797,"byte_end":11834,"line_start":396,"line_end":396,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11835,"byte_end":11838,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(6, mock.foo(&5));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11839,"byte_end":11871,"line_start":398,"line_end":398,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11872,"byte_end":11879,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11880,"byte_end":11883,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ ## Reference return values","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11884,"byte_end":11914,"line_start":401,"line_end":401,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11915,"byte_end":11918,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ Mockall can also use reference return values.  There is one restriction: the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":11919,"byte_end":11999,"line_start":403,"line_end":403,"column_start":1,"column_end":81}},{"value":"/ lifetime of the returned reference must be either the same as the lifetime","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12000,"byte_end":12078,"line_start":404,"line_end":404,"column_start":1,"column_end":79}},{"value":"/ of the mock object, or `'static`.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12079,"byte_end":12116,"line_start":405,"line_end":405,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12117,"byte_end":12120,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ Mockall creates different expectation types for methods that return","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12121,"byte_end":12192,"line_start":407,"line_end":407,"column_start":1,"column_end":72}},{"value":"/ references.  Their API is the same as the basic `Expectation`, except for","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12193,"byte_end":12270,"line_start":408,"line_end":408,"column_start":1,"column_end":78}},{"value":"/ setting return values.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12271,"byte_end":12297,"line_start":409,"line_end":409,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12298,"byte_end":12301,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ Methods that return `'static` references work just like methods that return","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12302,"byte_end":12381,"line_start":411,"line_end":411,"column_start":1,"column_end":80}},{"value":"/ any other `'static` value.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12382,"byte_end":12412,"line_start":412,"line_end":412,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12413,"byte_end":12420,"line_start":413,"line_end":413,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12421,"byte_end":12442,"line_start":414,"line_end":414,"column_start":1,"column_end":22}},{"value":"/ struct Thing(u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12443,"byte_end":12465,"line_start":415,"line_end":415,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12466,"byte_end":12469,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12470,"byte_end":12485,"line_start":417,"line_end":417,"column_start":1,"column_end":16}},{"value":"/ trait Container {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12486,"byte_end":12507,"line_start":418,"line_end":418,"column_start":1,"column_end":22}},{"value":"/     fn get(&self, i: u32) -> &'static Thing;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12508,"byte_end":12556,"line_start":419,"line_end":419,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12557,"byte_end":12562,"line_start":420,"line_end":420,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12563,"byte_end":12566,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12567,"byte_end":12584,"line_start":422,"line_end":422,"column_start":1,"column_end":18}},{"value":"/ const THING: Thing = Thing(42);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12585,"byte_end":12620,"line_start":423,"line_end":423,"column_start":1,"column_end":36}},{"value":"/ let mut mock = MockContainer::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12621,"byte_end":12661,"line_start":424,"line_end":424,"column_start":1,"column_end":41}},{"value":"/ mock.expect_get()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12662,"byte_end":12683,"line_start":425,"line_end":425,"column_start":1,"column_end":22}},{"value":"/     .return_const(&THING);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12684,"byte_end":12714,"line_start":426,"line_end":426,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12715,"byte_end":12718,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(42, mock.get(0).0);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12719,"byte_end":12753,"line_start":428,"line_end":428,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12754,"byte_end":12761,"line_start":429,"line_end":429,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12762,"byte_end":12769,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12770,"byte_end":12773,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Methods that take a `&self` argument use an `Expectation` class like","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12774,"byte_end":12846,"line_start":432,"line_end":432,"column_start":1,"column_end":73}},{"value":"/ [this](examples::__mock_MockFoo_Foo::__bar::Expectation),","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12847,"byte_end":12908,"line_start":433,"line_end":433,"column_start":1,"column_end":62}},{"value":"/ which","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12909,"byte_end":12918,"line_start":434,"line_end":434,"column_start":1,"column_end":10}},{"value":"/ gets its return value from the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12919,"byte_end":12953,"line_start":435,"line_end":435,"column_start":1,"column_end":35}},{"value":"/ [`return_const`](examples::__mock_MockFoo_Foo::__bar::Expectation::return_const) method.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":12954,"byte_end":13046,"line_start":436,"line_end":436,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13047,"byte_end":13050,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13051,"byte_end":13058,"line_start":438,"line_end":438,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13059,"byte_end":13080,"line_start":439,"line_end":439,"column_start":1,"column_end":22}},{"value":"/ struct Thing(u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13081,"byte_end":13103,"line_start":440,"line_end":440,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13104,"byte_end":13107,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13108,"byte_end":13123,"line_start":442,"line_end":442,"column_start":1,"column_end":16}},{"value":"/ trait Container {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13124,"byte_end":13145,"line_start":443,"line_end":443,"column_start":1,"column_end":22}},{"value":"/     fn get(&self, i: u32) -> &Thing;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13146,"byte_end":13186,"line_start":444,"line_end":444,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13187,"byte_end":13192,"line_start":445,"line_end":445,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13193,"byte_end":13196,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13197,"byte_end":13214,"line_start":447,"line_end":447,"column_start":1,"column_end":18}},{"value":"/ let thing = Thing(42);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13215,"byte_end":13241,"line_start":448,"line_end":448,"column_start":1,"column_end":27}},{"value":"/ let mut mock = MockContainer::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13242,"byte_end":13282,"line_start":449,"line_end":449,"column_start":1,"column_end":41}},{"value":"/ mock.expect_get()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13283,"byte_end":13304,"line_start":450,"line_end":450,"column_start":1,"column_end":22}},{"value":"/     .return_const(thing);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13305,"byte_end":13334,"line_start":451,"line_end":451,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13335,"byte_end":13338,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(42, mock.get(0).0);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13339,"byte_end":13373,"line_start":453,"line_end":453,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13374,"byte_end":13381,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13382,"byte_end":13389,"line_start":455,"line_end":455,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13390,"byte_end":13393,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ Methods that take a `&mut self` argument use an `Expectation` class like","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13394,"byte_end":13470,"line_start":457,"line_end":457,"column_start":1,"column_end":77}},{"value":"/ [this](examples::__mock_MockFoo_Foo::__baz::Expectation),","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13471,"byte_end":13532,"line_start":458,"line_end":458,"column_start":1,"column_end":62}},{"value":"/ class, regardless of whether the return value is actually mutable.  They can","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13533,"byte_end":13613,"line_start":459,"line_end":459,"column_start":1,"column_end":81}},{"value":"/ take their return value either from the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13614,"byte_end":13657,"line_start":460,"line_end":460,"column_start":1,"column_end":44}},{"value":"/ [`return_var`](examples::__mock_MockFoo_Foo::__baz::Expectation::return_var)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13658,"byte_end":13738,"line_start":461,"line_end":461,"column_start":1,"column_end":81}},{"value":"/ or","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13739,"byte_end":13745,"line_start":462,"line_end":462,"column_start":1,"column_end":7}},{"value":"/ [`returning`](examples::__mock_MockFoo_Foo::__baz::Expectation::returning)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13746,"byte_end":13824,"line_start":463,"line_end":463,"column_start":1,"column_end":79}},{"value":"/ methods.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13825,"byte_end":13837,"line_start":464,"line_end":464,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13838,"byte_end":13841,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13842,"byte_end":13849,"line_start":466,"line_end":466,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13850,"byte_end":13871,"line_start":467,"line_end":467,"column_start":1,"column_end":22}},{"value":"/ struct Thing(u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13872,"byte_end":13894,"line_start":468,"line_end":468,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13895,"byte_end":13898,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13899,"byte_end":13914,"line_start":470,"line_end":470,"column_start":1,"column_end":16}},{"value":"/ trait Container {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13915,"byte_end":13936,"line_start":471,"line_end":471,"column_start":1,"column_end":22}},{"value":"/     fn get_mut(&mut self, i: u32) -> &mut Thing;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13937,"byte_end":13989,"line_start":472,"line_end":472,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13990,"byte_end":13995,"line_start":473,"line_end":473,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":13996,"byte_end":13999,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14000,"byte_end":14017,"line_start":475,"line_end":475,"column_start":1,"column_end":18}},{"value":"/ let thing = Thing(42);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14018,"byte_end":14044,"line_start":476,"line_end":476,"column_start":1,"column_end":27}},{"value":"/ let mut mock = MockContainer::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14045,"byte_end":14085,"line_start":477,"line_end":477,"column_start":1,"column_end":41}},{"value":"/ mock.expect_get_mut()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14086,"byte_end":14111,"line_start":478,"line_end":478,"column_start":1,"column_end":26}},{"value":"/     .return_var(thing);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14112,"byte_end":14139,"line_start":479,"line_end":479,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14140,"byte_end":14143,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ mock.get_mut(0).0 = 43;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14144,"byte_end":14171,"line_start":481,"line_end":481,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(43, mock.get_mut(0).0);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14172,"byte_end":14210,"line_start":482,"line_end":482,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14211,"byte_end":14218,"line_start":483,"line_end":483,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14219,"byte_end":14226,"line_start":484,"line_end":484,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14227,"byte_end":14230,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ Unsized types that are common targets for","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14231,"byte_end":14276,"line_start":486,"line_end":486,"column_start":1,"column_end":46}},{"value":"/ [`Deref`](core::ops::Deref)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14277,"byte_end":14308,"line_start":487,"line_end":487,"column_start":1,"column_end":32}},{"value":"/ are special.  Mockall","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14309,"byte_end":14334,"line_start":488,"line_end":488,"column_start":1,"column_end":26}},{"value":"/ will automatically use the type's owned form for the Expectation.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14335,"byte_end":14404,"line_start":489,"line_end":489,"column_start":1,"column_end":70}},{"value":"/ Currently, the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14405,"byte_end":14423,"line_start":490,"line_end":490,"column_start":1,"column_end":19}},{"value":"/ [`CStr`](std::ffi::CStr),","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14424,"byte_end":14453,"line_start":491,"line_end":491,"column_start":1,"column_end":30}},{"value":"/ [`OsStr`](std::ffi::OsStr),","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14454,"byte_end":14485,"line_start":492,"line_end":492,"column_start":1,"column_end":32}},{"value":"/ [`Path`](std::path::Path),","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14486,"byte_end":14516,"line_start":493,"line_end":493,"column_start":1,"column_end":31}},{"value":"/ [`Slice`][std::slice],","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14517,"byte_end":14543,"line_start":494,"line_end":494,"column_start":1,"column_end":27}},{"value":"/ and","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14544,"byte_end":14551,"line_start":495,"line_end":495,"column_start":1,"column_end":8}},{"value":"/ [`str`](std::str)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14552,"byte_end":14573,"line_start":496,"line_end":496,"column_start":1,"column_end":22}},{"value":"/ types are supported.  Using this feature is automatic:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14574,"byte_end":14632,"line_start":497,"line_end":497,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14633,"byte_end":14636,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14637,"byte_end":14644,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14645,"byte_end":14666,"line_start":500,"line_end":500,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14667,"byte_end":14682,"line_start":501,"line_end":501,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14683,"byte_end":14698,"line_start":502,"line_end":502,"column_start":1,"column_end":16}},{"value":"/     fn name(&self) -> &str;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14699,"byte_end":14730,"line_start":503,"line_end":503,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14731,"byte_end":14736,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14737,"byte_end":14740,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14741,"byte_end":14775,"line_start":506,"line_end":506,"column_start":1,"column_end":35}},{"value":"/ mock.expect_name().return_const(\"abcd\".to_owned());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14776,"byte_end":14831,"line_start":507,"line_end":507,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(\"abcd\", mock.name());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14832,"byte_end":14868,"line_start":508,"line_end":508,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14869,"byte_end":14876,"line_start":509,"line_end":509,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14877,"byte_end":14880,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ Similarly, Mockall will use a Boxed trait object for the Expectation of","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14881,"byte_end":14956,"line_start":511,"line_end":511,"column_start":1,"column_end":76}},{"value":"/ methods that return references to trait objects.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":14957,"byte_end":15009,"line_start":512,"line_end":512,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15010,"byte_end":15013,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15014,"byte_end":15021,"line_start":514,"line_end":514,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15022,"byte_end":15043,"line_start":515,"line_end":515,"column_start":1,"column_end":22}},{"value":"/ # use std::fmt::Display;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15044,"byte_end":15072,"line_start":516,"line_end":516,"column_start":1,"column_end":29}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15073,"byte_end":15088,"line_start":517,"line_end":517,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15089,"byte_end":15104,"line_start":518,"line_end":518,"column_start":1,"column_end":16}},{"value":"/     fn name(&self) -> &dyn Display;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15105,"byte_end":15144,"line_start":519,"line_end":519,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15145,"byte_end":15150,"line_start":520,"line_end":520,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15151,"byte_end":15154,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15155,"byte_end":15172,"line_start":522,"line_end":522,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15173,"byte_end":15207,"line_start":523,"line_end":523,"column_start":1,"column_end":35}},{"value":"/ mock.expect_name().return_const(Box::new(\"abcd\"));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15208,"byte_end":15262,"line_start":524,"line_end":524,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(\"abcd\", format!(\"{}\", mock.name()));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15263,"byte_end":15314,"line_start":525,"line_end":525,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15315,"byte_end":15322,"line_start":526,"line_end":526,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15323,"byte_end":15330,"line_start":527,"line_end":527,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15331,"byte_end":15334,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15335,"byte_end":15338,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ ## Impl Trait","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15339,"byte_end":15356,"line_start":530,"line_end":530,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15357,"byte_end":15360,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ Rust 1.26.0 introduced the `impl Trait` feature.  It allows functions to","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15361,"byte_end":15437,"line_start":532,"line_end":532,"column_start":1,"column_end":77}},{"value":"/ return concrete but unnamed types (and, less usefully, to take them as","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15438,"byte_end":15512,"line_start":533,"line_end":533,"column_start":1,"column_end":75}},{"value":"/ arguments).  It's *almost* the same as `Box<dyn Trait>` but without the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15513,"byte_end":15588,"line_start":534,"line_end":534,"column_start":1,"column_end":76}},{"value":"/ extra allocation.  Mockall supports deriving mocks for methods that return","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15589,"byte_end":15667,"line_start":535,"line_end":535,"column_start":1,"column_end":79}},{"value":"/ `impl Trait`, with limitations.  When you derive the mock for such a method,","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15668,"byte_end":15748,"line_start":536,"line_end":536,"column_start":1,"column_end":81}},{"value":"/ Mockall internally transforms the Expectation's return type to `Box<dyn","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15749,"byte_end":15824,"line_start":537,"line_end":537,"column_start":1,"column_end":76}},{"value":"/ Trait>`, without changing the mock method's signature.  So you can use it","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15825,"byte_end":15902,"line_start":538,"line_end":538,"column_start":1,"column_end":78}},{"value":"/ like this:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15903,"byte_end":15917,"line_start":539,"line_end":539,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15918,"byte_end":15921,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15922,"byte_end":15929,"line_start":541,"line_end":541,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15930,"byte_end":15951,"line_start":542,"line_end":542,"column_start":1,"column_end":22}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15952,"byte_end":15978,"line_start":543,"line_end":543,"column_start":1,"column_end":27}},{"value":"/ struct Foo {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15979,"byte_end":15996,"line_start":544,"line_end":544,"column_start":1,"column_end":18}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":15997,"byte_end":16012,"line_start":545,"line_end":545,"column_start":1,"column_end":16}},{"value":"/ impl Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16013,"byte_end":16027,"line_start":546,"line_end":546,"column_start":1,"column_end":15}},{"value":"/     fn foo(&self) -> impl Debug {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16028,"byte_end":16065,"line_start":547,"line_end":547,"column_start":1,"column_end":38}},{"value":"/         // ...","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16066,"byte_end":16084,"line_start":548,"line_end":548,"column_start":1,"column_end":19}},{"value":"/         # 4","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16085,"byte_end":16100,"line_start":549,"line_end":549,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16101,"byte_end":16110,"line_start":550,"line_end":550,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16111,"byte_end":16116,"line_start":551,"line_end":551,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16117,"byte_end":16120,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16121,"byte_end":16138,"line_start":553,"line_end":553,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16139,"byte_end":16173,"line_start":554,"line_end":554,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16174,"byte_end":16195,"line_start":555,"line_end":555,"column_start":1,"column_end":22}},{"value":"/     .returning(|| Box::new(String::from(\"Hello, World!\")));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16196,"byte_end":16259,"line_start":556,"line_end":556,"column_start":1,"column_end":64}},{"value":"/ println!(\"{:?}\", mock.foo());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16260,"byte_end":16293,"line_start":557,"line_end":557,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16294,"byte_end":16301,"line_start":558,"line_end":558,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16302,"byte_end":16309,"line_start":559,"line_end":559,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16310,"byte_end":16313,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ However, `impl Trait` isn't *exactly* equivalent to `Box<dyn Trait>` but","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16314,"byte_end":16390,"line_start":561,"line_end":561,"column_start":1,"column_end":77}},{"value":"/ with fewer allocations.  There are some things the former can do but the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16391,"byte_end":16467,"line_start":562,"line_end":562,"column_start":1,"column_end":77}},{"value":"/ latter can't.  For one thing, you can't build a trait object out of a","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16468,"byte_end":16541,"line_start":563,"line_end":563,"column_start":1,"column_end":74}},{"value":"/ `Sized` trait.  So this won't work:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16542,"byte_end":16581,"line_start":564,"line_end":564,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16582,"byte_end":16585,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16586,"byte_end":16605,"line_start":566,"line_end":566,"column_start":1,"column_end":20}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16606,"byte_end":16627,"line_start":567,"line_end":567,"column_start":1,"column_end":22}},{"value":"/ struct Foo {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16628,"byte_end":16645,"line_start":568,"line_end":568,"column_start":1,"column_end":18}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16646,"byte_end":16661,"line_start":569,"line_end":569,"column_start":1,"column_end":16}},{"value":"/ impl Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16662,"byte_end":16676,"line_start":570,"line_end":570,"column_start":1,"column_end":15}},{"value":"/     fn foo(&self) -> impl Clone {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16677,"byte_end":16714,"line_start":571,"line_end":571,"column_start":1,"column_end":38}},{"value":"/         // ...","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16715,"byte_end":16733,"line_start":572,"line_end":572,"column_start":1,"column_end":19}},{"value":"/         # 4","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16734,"byte_end":16749,"line_start":573,"line_end":573,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16750,"byte_end":16759,"line_start":574,"line_end":574,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16760,"byte_end":16765,"line_start":575,"line_end":575,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16766,"byte_end":16773,"line_start":576,"line_end":576,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16774,"byte_end":16777,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ Nor can you create a trait object that implements two or more non-auto","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16778,"byte_end":16852,"line_start":578,"line_end":578,"column_start":1,"column_end":75}},{"value":"/ types.  So this won't work either:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16853,"byte_end":16891,"line_start":579,"line_end":579,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16892,"byte_end":16895,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16896,"byte_end":16915,"line_start":581,"line_end":581,"column_start":1,"column_end":20}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16916,"byte_end":16937,"line_start":582,"line_end":582,"column_start":1,"column_end":22}},{"value":"/ struct Foo {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16938,"byte_end":16955,"line_start":583,"line_end":583,"column_start":1,"column_end":18}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16956,"byte_end":16971,"line_start":584,"line_end":584,"column_start":1,"column_end":16}},{"value":"/ impl Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16972,"byte_end":16986,"line_start":585,"line_end":585,"column_start":1,"column_end":15}},{"value":"/     fn foo(&self) -> impl Debug + Display {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":16987,"byte_end":17034,"line_start":586,"line_end":586,"column_start":1,"column_end":48}},{"value":"/         // ...","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17035,"byte_end":17053,"line_start":587,"line_end":587,"column_start":1,"column_end":19}},{"value":"/         # 4","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17054,"byte_end":17069,"line_start":588,"line_end":588,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17070,"byte_end":17079,"line_start":589,"line_end":589,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17080,"byte_end":17085,"line_start":590,"line_end":590,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17086,"byte_end":17093,"line_start":591,"line_end":591,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17094,"byte_end":17097,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ For such cases, there is no magic bullet.  The best way to mock methods like","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17098,"byte_end":17178,"line_start":593,"line_end":593,"column_start":1,"column_end":81}},{"value":"/ those would be to refactor them to return named (but possibly opaque) types","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17179,"byte_end":17258,"line_start":594,"line_end":594,"column_start":1,"column_end":80}},{"value":"/ instead.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17259,"byte_end":17271,"line_start":595,"line_end":595,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17272,"byte_end":17275,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ See Also [`impl-trait-for-returning-complex-types-with-ease.html`](https://rust-lang-nursery.github.io/edition-guide/rust-2018/trait-system/impl-trait-for-returning-complex-types-with-ease)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17276,"byte_end":17469,"line_start":597,"line_end":597,"column_start":1,"column_end":194}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17470,"byte_end":17473,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ ### impl Future","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17474,"byte_end":17493,"line_start":599,"line_end":599,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17494,"byte_end":17497,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ Rust 1.36.0 added the `Future` trait.  Unlike virtually every trait that","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17498,"byte_end":17574,"line_start":601,"line_end":601,"column_start":1,"column_end":77}},{"value":"/ preceeded it, `Box<dyn Future>` is mostly useless.  Instead, you usually","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17575,"byte_end":17651,"line_start":602,"line_end":602,"column_start":1,"column_end":77}},{"value":"/ need a `Pin<Box<dyn Future>>`.  So that's what Mockall will do when you mock","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17652,"byte_end":17732,"line_start":603,"line_end":603,"column_start":1,"column_end":81}},{"value":"/ a method returning `impl Future` or the related `impl Stream`.  Just","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17733,"byte_end":17805,"line_start":604,"line_end":604,"column_start":1,"column_end":73}},{"value":"/ remember to use `pin` in your expectations, like this:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17806,"byte_end":17864,"line_start":605,"line_end":605,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17865,"byte_end":17868,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17869,"byte_end":17876,"line_start":607,"line_end":607,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17877,"byte_end":17898,"line_start":608,"line_end":608,"column_start":1,"column_end":22}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17899,"byte_end":17925,"line_start":609,"line_end":609,"column_start":1,"column_end":27}},{"value":"/ # use futures::{Future, future};","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17926,"byte_end":17962,"line_start":610,"line_end":610,"column_start":1,"column_end":37}},{"value":"/ struct Foo {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17963,"byte_end":17980,"line_start":611,"line_end":611,"column_start":1,"column_end":18}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17981,"byte_end":17996,"line_start":612,"line_end":612,"column_start":1,"column_end":16}},{"value":"/ impl Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":17997,"byte_end":18011,"line_start":613,"line_end":613,"column_start":1,"column_end":15}},{"value":"/     fn foo(&self) -> impl Future<Output=i32> {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18012,"byte_end":18062,"line_start":614,"line_end":614,"column_start":1,"column_end":51}},{"value":"/         // ...","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18063,"byte_end":18081,"line_start":615,"line_end":615,"column_start":1,"column_end":19}},{"value":"/         # future::ready(42)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18082,"byte_end":18113,"line_start":616,"line_end":616,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18114,"byte_end":18123,"line_start":617,"line_end":617,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18124,"byte_end":18129,"line_start":618,"line_end":618,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18130,"byte_end":18133,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18134,"byte_end":18151,"line_start":620,"line_end":620,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18152,"byte_end":18186,"line_start":621,"line_end":621,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18187,"byte_end":18208,"line_start":622,"line_end":622,"column_start":1,"column_end":22}},{"value":"/     .returning(|| Box::pin(future::ready(42)));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18209,"byte_end":18260,"line_start":623,"line_end":623,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18261,"byte_end":18268,"line_start":624,"line_end":624,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18269,"byte_end":18276,"line_start":625,"line_end":625,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18277,"byte_end":18280,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ ## Mocking structs","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18281,"byte_end":18303,"line_start":627,"line_end":627,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18304,"byte_end":18307,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ Mockall mocks structs as well as traits.  The problem here is a namespace","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18308,"byte_end":18385,"line_start":629,"line_end":629,"column_start":1,"column_end":78}},{"value":"/ problem: it's hard to supply the mock object to your code under test,","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18386,"byte_end":18459,"line_start":630,"line_end":630,"column_start":1,"column_end":74}},{"value":"/ because it has a different name.  The solution is to alter import paths","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18460,"byte_end":18535,"line_start":631,"line_end":631,"column_start":1,"column_end":76}},{"value":"/ during test.  The easiest way to do that is with the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18536,"byte_end":18592,"line_start":632,"line_end":632,"column_start":1,"column_end":57}},{"value":"/ [`mockall_double`](https://docs.rs/mockall_double/latest) crate.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18593,"byte_end":18661,"line_start":633,"line_end":633,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18662,"byte_end":18665,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ [`#[automock]`](attr.automock.html)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18666,"byte_end":18705,"line_start":635,"line_end":635,"column_start":1,"column_end":40}},{"value":"/ works for structs that have a single `impl` block:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18706,"byte_end":18760,"line_start":636,"line_end":636,"column_start":1,"column_end":55}},{"value":"/ ```no_run","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18761,"byte_end":18774,"line_start":637,"line_end":637,"column_start":1,"column_end":14}},{"value":"/ use mockall_double::double;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18775,"byte_end":18806,"line_start":638,"line_end":638,"column_start":1,"column_end":32}},{"value":"/ mod thing {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18807,"byte_end":18822,"line_start":639,"line_end":639,"column_start":1,"column_end":16}},{"value":"/     use mockall::automock;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18823,"byte_end":18853,"line_start":640,"line_end":640,"column_start":1,"column_end":31}},{"value":"/     pub struct Thing{}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18854,"byte_end":18880,"line_start":641,"line_end":641,"column_start":1,"column_end":27}},{"value":"/     #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18881,"byte_end":18900,"line_start":642,"line_end":642,"column_start":1,"column_end":20}},{"value":"/     impl Thing {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18901,"byte_end":18921,"line_start":643,"line_end":643,"column_start":1,"column_end":21}},{"value":"/         pub fn foo(&self) -> u32 {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18922,"byte_end":18960,"line_start":644,"line_end":644,"column_start":1,"column_end":39}},{"value":"/             // ...","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18961,"byte_end":18983,"line_start":645,"line_end":645,"column_start":1,"column_end":23}},{"value":"/             # unimplemented!()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":18984,"byte_end":19018,"line_start":646,"line_end":646,"column_start":1,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19019,"byte_end":19032,"line_start":647,"line_end":647,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19033,"byte_end":19042,"line_start":648,"line_end":648,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19043,"byte_end":19048,"line_start":649,"line_end":649,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19049,"byte_end":19052,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ #[double]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19053,"byte_end":19066,"line_start":651,"line_end":651,"column_start":1,"column_end":14}},{"value":"/ use thing::Thing;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19067,"byte_end":19088,"line_start":652,"line_end":652,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19089,"byte_end":19092,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ fn do_stuff(thing: &Thing) -> u32 {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19093,"byte_end":19132,"line_start":654,"line_end":654,"column_start":1,"column_end":40}},{"value":"/     thing.foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19133,"byte_end":19152,"line_start":655,"line_end":655,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19153,"byte_end":19158,"line_start":656,"line_end":656,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19159,"byte_end":19162,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ #[cfg(test)]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19163,"byte_end":19179,"line_start":658,"line_end":658,"column_start":1,"column_end":17}},{"value":"/ mod t {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19180,"byte_end":19191,"line_start":659,"line_end":659,"column_start":1,"column_end":12}},{"value":"/     use super::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19192,"byte_end":19213,"line_start":660,"line_end":660,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19214,"byte_end":19217,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/     #[test]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19218,"byte_end":19233,"line_start":662,"line_end":662,"column_start":1,"column_end":16}},{"value":"/     fn test_foo() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19234,"byte_end":19257,"line_start":663,"line_end":663,"column_start":1,"column_end":24}},{"value":"/         let mut mock = Thing::default();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19258,"byte_end":19302,"line_start":664,"line_end":664,"column_start":1,"column_end":45}},{"value":"/         mock.expect_foo().returning(|| 42);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19303,"byte_end":19350,"line_start":665,"line_end":665,"column_start":1,"column_end":48}},{"value":"/         do_stuff(&mock);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19351,"byte_end":19379,"line_start":666,"line_end":666,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19380,"byte_end":19389,"line_start":667,"line_end":667,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19390,"byte_end":19395,"line_start":668,"line_end":668,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19396,"byte_end":19414,"line_start":669,"line_end":669,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19415,"byte_end":19422,"line_start":670,"line_end":670,"column_start":1,"column_end":8}},{"value":"/ For structs with more than one `impl` block, see [`mock!`]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19423,"byte_end":19485,"line_start":671,"line_end":671,"column_start":1,"column_end":63}},{"value":"/ instead.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19486,"byte_end":19498,"line_start":672,"line_end":672,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19499,"byte_end":19502,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ ## Generic methods","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19503,"byte_end":19525,"line_start":674,"line_end":674,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19526,"byte_end":19529,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ Generic methods can be mocked, too.  Effectively each generic method is an","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19530,"byte_end":19608,"line_start":676,"line_end":676,"column_start":1,"column_end":79}},{"value":"/ infinite set of regular methods, and each of those works just like any other","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19609,"byte_end":19689,"line_start":677,"line_end":677,"column_start":1,"column_end":81}},{"value":"/ regular method.  The expect_* method is generic, too, and usually must be","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19690,"byte_end":19767,"line_start":678,"line_end":678,"column_start":1,"column_end":78}},{"value":"/ called with a turbofish.  The only restrictions on mocking generic methods","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19768,"byte_end":19846,"line_start":679,"line_end":679,"column_start":1,"column_end":79}},{"value":"/ are that all generic parameters must be `'static`, and generic lifetime","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19847,"byte_end":19922,"line_start":680,"line_end":680,"column_start":1,"column_end":76}},{"value":"/ parameters are not allowed.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19923,"byte_end":19954,"line_start":681,"line_end":681,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19955,"byte_end":19958,"line_start":682,"line_end":682,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19959,"byte_end":19966,"line_start":683,"line_end":683,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19967,"byte_end":19988,"line_start":684,"line_end":684,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":19989,"byte_end":20004,"line_start":685,"line_end":685,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20005,"byte_end":20020,"line_start":686,"line_end":686,"column_start":1,"column_end":16}},{"value":"/     fn foo<T: 'static>(&self, t: T) -> i32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20021,"byte_end":20068,"line_start":687,"line_end":687,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20069,"byte_end":20074,"line_start":688,"line_end":688,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20075,"byte_end":20078,"line_start":689,"line_end":689,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20079,"byte_end":20113,"line_start":690,"line_end":690,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo::<i16>()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20114,"byte_end":20142,"line_start":691,"line_end":691,"column_start":1,"column_end":29}},{"value":"/     .returning(|t| i32::from(t));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20143,"byte_end":20180,"line_start":692,"line_end":692,"column_start":1,"column_end":38}},{"value":"/ mock.expect_foo::<i8>()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20181,"byte_end":20208,"line_start":693,"line_end":693,"column_start":1,"column_end":28}},{"value":"/     .returning(|t| -i32::from(t));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20209,"byte_end":20247,"line_start":694,"line_end":694,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20248,"byte_end":20251,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, mock.foo(5i16));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20252,"byte_end":20286,"line_start":696,"line_end":696,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(-5, mock.foo(5i8));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20287,"byte_end":20321,"line_start":697,"line_end":697,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20322,"byte_end":20329,"line_start":698,"line_end":698,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20330,"byte_end":20333,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ ## Methods with generic lifetimes","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20334,"byte_end":20371,"line_start":700,"line_end":700,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20372,"byte_end":20375,"line_start":701,"line_end":701,"column_start":1,"column_end":4}},{"value":"/ A method with a lifetime parameter is technically a generic method, but","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20376,"byte_end":20451,"line_start":702,"line_end":702,"column_start":1,"column_end":76}},{"value":"/ Mockall treats it like a non-generic method that must work for all possible","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20452,"byte_end":20531,"line_start":703,"line_end":703,"column_start":1,"column_end":80}},{"value":"/ lifetimes.  Mocking such a method is similar to mocking a non-generic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20532,"byte_end":20605,"line_start":704,"line_end":704,"column_start":1,"column_end":74}},{"value":"/ method, with a few additional restrictions.  One restriction is that you","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20606,"byte_end":20682,"line_start":705,"line_end":705,"column_start":1,"column_end":77}},{"value":"/ can't match calls with `with`, you must use `withf` instead.  Another is","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20683,"byte_end":20759,"line_start":706,"line_end":706,"column_start":1,"column_end":77}},{"value":"/ that the generic lifetime may not appear as part of the return type.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20760,"byte_end":20832,"line_start":707,"line_end":707,"column_start":1,"column_end":73}},{"value":"/ Finally, no method may have both generic lifetime parameters *and* generic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20833,"byte_end":20911,"line_start":708,"line_end":708,"column_start":1,"column_end":79}},{"value":"/ type parameters.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20912,"byte_end":20932,"line_start":709,"line_end":709,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20933,"byte_end":20936,"line_start":710,"line_end":710,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20937,"byte_end":20944,"line_start":711,"line_end":711,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20945,"byte_end":20966,"line_start":712,"line_end":712,"column_start":1,"column_end":22}},{"value":"/ struct X<'a>(&'a i32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20967,"byte_end":20993,"line_start":713,"line_end":713,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20994,"byte_end":20997,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":20998,"byte_end":21013,"line_start":715,"line_end":715,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21014,"byte_end":21029,"line_start":716,"line_end":716,"column_start":1,"column_end":16}},{"value":"/     fn foo<'a>(&self, x: X<'a>) -> i32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21030,"byte_end":21073,"line_start":717,"line_end":717,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21074,"byte_end":21079,"line_start":718,"line_end":718,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21080,"byte_end":21083,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21084,"byte_end":21101,"line_start":720,"line_end":720,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21102,"byte_end":21136,"line_start":721,"line_end":721,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21137,"byte_end":21158,"line_start":722,"line_end":722,"column_start":1,"column_end":22}},{"value":"/     .withf(|f| *f.0 == 5)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21159,"byte_end":21188,"line_start":723,"line_end":723,"column_start":1,"column_end":30}},{"value":"/     .return_const(42);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21189,"byte_end":21215,"line_start":724,"line_end":724,"column_start":1,"column_end":27}},{"value":"/ let x = X(&5);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21216,"byte_end":21234,"line_start":725,"line_end":725,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(42, mock.foo(x));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21235,"byte_end":21267,"line_start":726,"line_end":726,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21268,"byte_end":21275,"line_start":727,"line_end":727,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21276,"byte_end":21283,"line_start":728,"line_end":728,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21284,"byte_end":21287,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ ## Generic traits and structs","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21288,"byte_end":21321,"line_start":730,"line_end":730,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21322,"byte_end":21325,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ Mocking generic structs and generic traits is not a problem.  The mock","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21326,"byte_end":21400,"line_start":732,"line_end":732,"column_start":1,"column_end":75}},{"value":"/ struct will be generic, too.  The same restrictions apply as with mocking","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21401,"byte_end":21478,"line_start":733,"line_end":733,"column_start":1,"column_end":78}},{"value":"/ generic methods: each generic parameter must be `'static`, and generic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21479,"byte_end":21553,"line_start":734,"line_end":734,"column_start":1,"column_end":75}},{"value":"/ lifetime parameters are not allowed.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21554,"byte_end":21594,"line_start":735,"line_end":735,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21595,"byte_end":21598,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21599,"byte_end":21606,"line_start":737,"line_end":737,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21607,"byte_end":21628,"line_start":738,"line_end":738,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21629,"byte_end":21644,"line_start":739,"line_end":739,"column_start":1,"column_end":16}},{"value":"/ trait Foo<T: 'static> {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21645,"byte_end":21672,"line_start":740,"line_end":740,"column_start":1,"column_end":28}},{"value":"/     fn foo(&self, t: T) -> i32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21673,"byte_end":21708,"line_start":741,"line_end":741,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21709,"byte_end":21714,"line_start":742,"line_end":742,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21715,"byte_end":21718,"line_start":743,"line_end":743,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21719,"byte_end":21736,"line_start":744,"line_end":744,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockFoo::<i16>::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21737,"byte_end":21778,"line_start":745,"line_end":745,"column_start":1,"column_end":42}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21779,"byte_end":21800,"line_start":746,"line_end":746,"column_start":1,"column_end":22}},{"value":"/     .returning(|t| i32::from(t));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21801,"byte_end":21838,"line_start":747,"line_end":747,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(5, mock.foo(5i16));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21839,"byte_end":21873,"line_start":748,"line_end":748,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21874,"byte_end":21881,"line_start":749,"line_end":749,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21882,"byte_end":21889,"line_start":750,"line_end":750,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21890,"byte_end":21893,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ ## Associated types","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21894,"byte_end":21917,"line_start":752,"line_end":752,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21918,"byte_end":21921,"line_start":753,"line_end":753,"column_start":1,"column_end":4}},{"value":"/ Traits with associated types can be mocked too.  Unlike generic traits, the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":21922,"byte_end":22001,"line_start":754,"line_end":754,"column_start":1,"column_end":80}},{"value":"/ mock struct will not be generic.  Instead, you must specify the associated","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22002,"byte_end":22080,"line_start":755,"line_end":755,"column_start":1,"column_end":79}},{"value":"/ types when defining the mock struct.  They're specified as metaitems to the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22081,"byte_end":22160,"line_start":756,"line_end":756,"column_start":1,"column_end":80}},{"value":"/ [`#[automock]`](attr.automock.html) attribute.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22161,"byte_end":22211,"line_start":757,"line_end":757,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22212,"byte_end":22215,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22216,"byte_end":22223,"line_start":759,"line_end":759,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22224,"byte_end":22245,"line_start":760,"line_end":760,"column_start":1,"column_end":22}},{"value":"/ #[automock(type Key=u16; type Value=i32;)]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22246,"byte_end":22292,"line_start":761,"line_end":761,"column_start":1,"column_end":47}},{"value":"/ pub trait A {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22293,"byte_end":22310,"line_start":762,"line_end":762,"column_start":1,"column_end":18}},{"value":"/     type Key;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22311,"byte_end":22328,"line_start":763,"line_end":763,"column_start":1,"column_end":18}},{"value":"/     type Value;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22329,"byte_end":22348,"line_start":764,"line_end":764,"column_start":1,"column_end":20}},{"value":"/     fn foo(&self, k: Self::Key) -> Self::Value;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22349,"byte_end":22400,"line_start":765,"line_end":765,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22401,"byte_end":22406,"line_start":766,"line_end":766,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22407,"byte_end":22410,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockA::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22411,"byte_end":22443,"line_start":768,"line_end":768,"column_start":1,"column_end":33}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22444,"byte_end":22465,"line_start":769,"line_end":769,"column_start":1,"column_end":22}},{"value":"/     .returning(|x: u16| i32::from(x));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22466,"byte_end":22508,"line_start":770,"line_end":770,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(4, mock.foo(4));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22509,"byte_end":22540,"line_start":771,"line_end":771,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22541,"byte_end":22548,"line_start":772,"line_end":772,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22549,"byte_end":22552,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ ## Multiple and inherited traits","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22553,"byte_end":22589,"line_start":774,"line_end":774,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22590,"byte_end":22593,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ Creating a mock struct that implements multiple traits, whether inherited or","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22594,"byte_end":22674,"line_start":776,"line_end":776,"column_start":1,"column_end":81}},{"value":"/ not, requires using the [`mock!`] macro.  But once created,","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22675,"byte_end":22738,"line_start":777,"line_end":777,"column_start":1,"column_end":64}},{"value":"/ using it is just the same as using any other mock object:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22739,"byte_end":22800,"line_start":778,"line_end":778,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22801,"byte_end":22804,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22805,"byte_end":22812,"line_start":780,"line_end":780,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22813,"byte_end":22834,"line_start":781,"line_end":781,"column_start":1,"column_end":22}},{"value":"/ pub trait A {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22835,"byte_end":22852,"line_start":782,"line_end":782,"column_start":1,"column_end":18}},{"value":"/     fn foo(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22853,"byte_end":22875,"line_start":783,"line_end":783,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22876,"byte_end":22881,"line_start":784,"line_end":784,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22882,"byte_end":22885,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ pub trait B: A {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22886,"byte_end":22906,"line_start":786,"line_end":786,"column_start":1,"column_end":21}},{"value":"/     fn bar(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22907,"byte_end":22929,"line_start":787,"line_end":787,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22930,"byte_end":22935,"line_start":788,"line_end":788,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22936,"byte_end":22939,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ mock! {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22940,"byte_end":22951,"line_start":790,"line_end":790,"column_start":1,"column_end":12}},{"value":"/     // Structure to mock","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22952,"byte_end":22980,"line_start":791,"line_end":791,"column_start":1,"column_end":29}},{"value":"/     C {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22981,"byte_end":22993,"line_start":792,"line_end":792,"column_start":1,"column_end":13}},{"value":"/     // First trait to implement on C","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":22994,"byte_end":23034,"line_start":793,"line_end":793,"column_start":1,"column_end":41}},{"value":"/     impl A for C {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23035,"byte_end":23057,"line_start":794,"line_end":794,"column_start":1,"column_end":23}},{"value":"/         fn foo(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23058,"byte_end":23084,"line_start":795,"line_end":795,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23085,"byte_end":23094,"line_start":796,"line_end":796,"column_start":1,"column_end":10}},{"value":"/     // Second trait to implement on C","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23095,"byte_end":23136,"line_start":797,"line_end":797,"column_start":1,"column_end":42}},{"value":"/     impl B for C {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23137,"byte_end":23159,"line_start":798,"line_end":798,"column_start":1,"column_end":23}},{"value":"/         fn bar(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23160,"byte_end":23186,"line_start":799,"line_end":799,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23187,"byte_end":23196,"line_start":800,"line_end":800,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23197,"byte_end":23202,"line_start":801,"line_end":801,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23203,"byte_end":23220,"line_start":802,"line_end":802,"column_start":1,"column_end":18}},{"value":"/ let mut mock = MockC::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23221,"byte_end":23253,"line_start":803,"line_end":803,"column_start":1,"column_end":33}},{"value":"/ mock.expect_foo().returning(|| ());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23254,"byte_end":23293,"line_start":804,"line_end":804,"column_start":1,"column_end":40}},{"value":"/ mock.expect_bar().returning(|| ());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23294,"byte_end":23333,"line_start":805,"line_end":805,"column_start":1,"column_end":40}},{"value":"/ mock.foo();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23334,"byte_end":23349,"line_start":806,"line_end":806,"column_start":1,"column_end":16}},{"value":"/ mock.bar();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23350,"byte_end":23365,"line_start":807,"line_end":807,"column_start":1,"column_end":16}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23366,"byte_end":23373,"line_start":808,"line_end":808,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23374,"byte_end":23381,"line_start":809,"line_end":809,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23382,"byte_end":23385,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ ## External traits","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23386,"byte_end":23408,"line_start":811,"line_end":811,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23409,"byte_end":23412,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ Mockall can mock traits and structs defined in external crates that are","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23413,"byte_end":23488,"line_start":813,"line_end":813,"column_start":1,"column_end":76}},{"value":"/ beyond your control, but you must use [`mock!`] instead of","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23489,"byte_end":23551,"line_start":814,"line_end":814,"column_start":1,"column_end":63}},{"value":"/ [`#[automock]`](attr.automock.html).  Mock an external trait like this:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23552,"byte_end":23627,"line_start":815,"line_end":815,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23628,"byte_end":23631,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23632,"byte_end":23639,"line_start":817,"line_end":817,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23640,"byte_end":23661,"line_start":818,"line_end":818,"column_start":1,"column_end":22}},{"value":"/ mock! {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23662,"byte_end":23673,"line_start":819,"line_end":819,"column_start":1,"column_end":12}},{"value":"/     MyStruct {}     // Name of the mock struct, less the \"Mock\" prefix","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23674,"byte_end":23748,"line_start":820,"line_end":820,"column_start":1,"column_end":75}},{"value":"/     impl Clone for MyStruct {   // specification of the trait to mock","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23749,"byte_end":23822,"line_start":821,"line_end":821,"column_start":1,"column_end":74}},{"value":"/         fn clone(&self) -> Self;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23823,"byte_end":23859,"line_start":822,"line_end":822,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23860,"byte_end":23869,"line_start":823,"line_end":823,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23870,"byte_end":23875,"line_start":824,"line_end":824,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23876,"byte_end":23879,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23880,"byte_end":23897,"line_start":826,"line_end":826,"column_start":1,"column_end":18}},{"value":"/ let mut mock1 = MockMyStruct::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23898,"byte_end":23938,"line_start":827,"line_end":827,"column_start":1,"column_end":41}},{"value":"/ let mock2 = MockMyStruct::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23939,"byte_end":23975,"line_start":828,"line_end":828,"column_start":1,"column_end":37}},{"value":"/ mock1.expect_clone()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":23976,"byte_end":24000,"line_start":829,"line_end":829,"column_start":1,"column_end":25}},{"value":"/     .return_once(move || mock2);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24001,"byte_end":24037,"line_start":830,"line_end":830,"column_start":1,"column_end":37}},{"value":"/ let cloned = mock1.clone();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24038,"byte_end":24069,"line_start":831,"line_end":831,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24070,"byte_end":24077,"line_start":832,"line_end":832,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24078,"byte_end":24085,"line_start":833,"line_end":833,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24086,"byte_end":24089,"line_start":834,"line_end":834,"column_start":1,"column_end":4}},{"value":"/ ## Static methods","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24090,"byte_end":24111,"line_start":835,"line_end":835,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24112,"byte_end":24115,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ Mockall can also mock static methods.  But be careful!  The expectations are","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24116,"byte_end":24196,"line_start":837,"line_end":837,"column_start":1,"column_end":81}},{"value":"/ global.  If you want to use a static method in multiple tests, you must","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24197,"byte_end":24272,"line_start":838,"line_end":838,"column_start":1,"column_end":76}},{"value":"/ provide your own synchronization.  For ordinary methods, expectations are","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24273,"byte_end":24350,"line_start":839,"line_end":839,"column_start":1,"column_end":78}},{"value":"/ set on the mock object.  But static methods don't have any mock object.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24351,"byte_end":24426,"line_start":840,"line_end":840,"column_start":1,"column_end":76}},{"value":"/ Instead, you must create a `Context` object just to set their expectations.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24427,"byte_end":24506,"line_start":841,"line_end":841,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24507,"byte_end":24510,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24511,"byte_end":24518,"line_start":843,"line_end":843,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24519,"byte_end":24540,"line_start":844,"line_end":844,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24541,"byte_end":24556,"line_start":845,"line_end":845,"column_start":1,"column_end":16}},{"value":"/ pub trait A {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24557,"byte_end":24574,"line_start":846,"line_end":846,"column_start":1,"column_end":18}},{"value":"/     fn foo() -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24575,"byte_end":24599,"line_start":847,"line_end":847,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24600,"byte_end":24605,"line_start":848,"line_end":848,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24606,"byte_end":24609,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ let ctx = MockA::foo_context();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24610,"byte_end":24645,"line_start":850,"line_end":850,"column_start":1,"column_end":36}},{"value":"/ ctx.expect().returning(|| 99);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24646,"byte_end":24680,"line_start":851,"line_end":851,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(99, MockA::foo());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24681,"byte_end":24714,"line_start":852,"line_end":852,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24715,"byte_end":24722,"line_start":853,"line_end":853,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24723,"byte_end":24726,"line_start":854,"line_end":854,"column_start":1,"column_end":4}},{"value":"/ A common pattern is mocking a trait with a constructor method.  In this case,","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24727,"byte_end":24808,"line_start":855,"line_end":855,"column_start":1,"column_end":82}},{"value":"/ you can easily set the mock constructor method to return a mock object.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24809,"byte_end":24884,"line_start":856,"line_end":856,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24885,"byte_end":24888,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24889,"byte_end":24896,"line_start":858,"line_end":858,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24897,"byte_end":24918,"line_start":859,"line_end":859,"column_start":1,"column_end":22}},{"value":"/ struct Foo{}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24919,"byte_end":24935,"line_start":860,"line_end":860,"column_start":1,"column_end":17}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24936,"byte_end":24951,"line_start":861,"line_end":861,"column_start":1,"column_end":16}},{"value":"/ impl Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24952,"byte_end":24966,"line_start":862,"line_end":862,"column_start":1,"column_end":15}},{"value":"/     fn from_i32(x: i32) -> Self {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":24967,"byte_end":25004,"line_start":863,"line_end":863,"column_start":1,"column_end":38}},{"value":"/         // ...","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25005,"byte_end":25023,"line_start":864,"line_end":864,"column_start":1,"column_end":19}},{"value":"/         # unimplemented!()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25024,"byte_end":25054,"line_start":865,"line_end":865,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25055,"byte_end":25064,"line_start":866,"line_end":866,"column_start":1,"column_end":10}},{"value":"/     fn foo(&self) -> i32 {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25065,"byte_end":25095,"line_start":867,"line_end":867,"column_start":1,"column_end":31}},{"value":"/         // ...","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25096,"byte_end":25114,"line_start":868,"line_end":868,"column_start":1,"column_end":19}},{"value":"/         # unimplemented!()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25115,"byte_end":25145,"line_start":869,"line_end":869,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25146,"byte_end":25155,"line_start":870,"line_end":870,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25156,"byte_end":25161,"line_start":871,"line_end":871,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25162,"byte_end":25165,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25166,"byte_end":25183,"line_start":873,"line_end":873,"column_start":1,"column_end":18}},{"value":"/ let ctx = MockFoo::from_i32_context();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25184,"byte_end":25226,"line_start":874,"line_end":874,"column_start":1,"column_end":43}},{"value":"/ ctx.expect()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25227,"byte_end":25243,"line_start":875,"line_end":875,"column_start":1,"column_end":17}},{"value":"/     .returning(|x| {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25244,"byte_end":25268,"line_start":876,"line_end":876,"column_start":1,"column_end":25}},{"value":"/         let mut mock = MockFoo::default();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25269,"byte_end":25315,"line_start":877,"line_end":877,"column_start":1,"column_end":47}},{"value":"/         mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25316,"byte_end":25345,"line_start":878,"line_end":878,"column_start":1,"column_end":30}},{"value":"/             .return_const(x);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25346,"byte_end":25379,"line_start":879,"line_end":879,"column_start":1,"column_end":34}},{"value":"/         mock","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25380,"byte_end":25396,"line_start":880,"line_end":880,"column_start":1,"column_end":17}},{"value":"/     });","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25397,"byte_end":25408,"line_start":881,"line_end":881,"column_start":1,"column_end":12}},{"value":"/ let foo = MockFoo::from_i32(42);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25409,"byte_end":25445,"line_start":882,"line_end":882,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(42, foo.foo());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25446,"byte_end":25476,"line_start":883,"line_end":883,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25477,"byte_end":25484,"line_start":884,"line_end":884,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25485,"byte_end":25492,"line_start":885,"line_end":885,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25493,"byte_end":25496,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ ### Generic static methods","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25497,"byte_end":25527,"line_start":887,"line_end":887,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25528,"byte_end":25531,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ Mocking static methods of generic structs or traits, whether or not the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25532,"byte_end":25607,"line_start":889,"line_end":889,"column_start":1,"column_end":76}},{"value":"/ methods themselves are generic, should work seamlessly.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25608,"byte_end":25667,"line_start":890,"line_end":890,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25668,"byte_end":25671,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25672,"byte_end":25679,"line_start":892,"line_end":892,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25680,"byte_end":25701,"line_start":893,"line_end":893,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25702,"byte_end":25717,"line_start":894,"line_end":894,"column_start":1,"column_end":16}},{"value":"/ trait Foo<T: 'static> {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25718,"byte_end":25745,"line_start":895,"line_end":895,"column_start":1,"column_end":28}},{"value":"/     fn new(t: T) -> MockFoo<T>;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25746,"byte_end":25781,"line_start":896,"line_end":896,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25782,"byte_end":25787,"line_start":897,"line_end":897,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25788,"byte_end":25791,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25792,"byte_end":25809,"line_start":899,"line_end":899,"column_start":1,"column_end":18}},{"value":"/ let ctx = MockFoo::<u32>::new_context();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25810,"byte_end":25854,"line_start":900,"line_end":900,"column_start":1,"column_end":45}},{"value":"/ ctx.expect()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25855,"byte_end":25871,"line_start":901,"line_end":901,"column_start":1,"column_end":17}},{"value":"/     .returning(|_| MockFoo::default());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25872,"byte_end":25915,"line_start":902,"line_end":902,"column_start":1,"column_end":44}},{"value":"/ let mock = MockFoo::<u32>::new(42u32);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25916,"byte_end":25958,"line_start":903,"line_end":903,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25959,"byte_end":25966,"line_start":904,"line_end":904,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25967,"byte_end":25974,"line_start":905,"line_end":905,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25975,"byte_end":25978,"line_start":906,"line_end":906,"column_start":1,"column_end":4}},{"value":"/ ### Context checkpoints","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":25979,"byte_end":26006,"line_start":907,"line_end":907,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26007,"byte_end":26010,"line_start":908,"line_end":908,"column_start":1,"column_end":4}},{"value":"/ The context object cleans up all expectations when it leaves scope.  It also","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26011,"byte_end":26091,"line_start":909,"line_end":909,"column_start":1,"column_end":81}},{"value":"/ has a `checkpoint` method that functions just like a mock object's","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26092,"byte_end":26162,"line_start":910,"line_end":910,"column_start":1,"column_end":71}},{"value":"/ `checkpoint` method.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26163,"byte_end":26187,"line_start":911,"line_end":911,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26188,"byte_end":26191,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26192,"byte_end":26211,"line_start":913,"line_end":913,"column_start":1,"column_end":20}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26212,"byte_end":26233,"line_start":914,"line_end":914,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26234,"byte_end":26249,"line_start":915,"line_end":915,"column_start":1,"column_end":16}},{"value":"/ pub trait A {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26250,"byte_end":26267,"line_start":916,"line_end":916,"column_start":1,"column_end":18}},{"value":"/     fn foo() -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26268,"byte_end":26292,"line_start":917,"line_end":917,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26293,"byte_end":26298,"line_start":918,"line_end":918,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26299,"byte_end":26302,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ let ctx = MockA::foo_context();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26303,"byte_end":26338,"line_start":920,"line_end":920,"column_start":1,"column_end":36}},{"value":"/ ctx.expect()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26339,"byte_end":26355,"line_start":921,"line_end":921,"column_start":1,"column_end":17}},{"value":"/     .times(1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26356,"byte_end":26373,"line_start":922,"line_end":922,"column_start":1,"column_end":18}},{"value":"/     .returning(|| 99);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26374,"byte_end":26400,"line_start":923,"line_end":923,"column_start":1,"column_end":27}},{"value":"/ ctx.checkpoint();   // Panics!","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26401,"byte_end":26435,"line_start":924,"line_end":924,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26436,"byte_end":26443,"line_start":925,"line_end":925,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26444,"byte_end":26447,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ A mock object's checkpoint method does *not* checkpoint static methods.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26448,"byte_end":26523,"line_start":927,"line_end":927,"column_start":1,"column_end":76}},{"value":"/ This behavior is useful when using multiple mock objects at once.  For","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26524,"byte_end":26598,"line_start":928,"line_end":928,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26599,"byte_end":26611,"line_start":929,"line_end":929,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26612,"byte_end":26615,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26616,"byte_end":26623,"line_start":931,"line_end":931,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26624,"byte_end":26645,"line_start":932,"line_end":932,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26646,"byte_end":26661,"line_start":933,"line_end":933,"column_start":1,"column_end":16}},{"value":"/ pub trait A {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26662,"byte_end":26679,"line_start":934,"line_end":934,"column_start":1,"column_end":18}},{"value":"/     fn build() -> Self;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26680,"byte_end":26707,"line_start":935,"line_end":935,"column_start":1,"column_end":28}},{"value":"/     fn bar(&self) -> i32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26708,"byte_end":26737,"line_start":936,"line_end":936,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26738,"byte_end":26743,"line_start":937,"line_end":937,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26744,"byte_end":26747,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26748,"byte_end":26765,"line_start":939,"line_end":939,"column_start":1,"column_end":18}},{"value":"/ let ctx = MockA::build_context();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26766,"byte_end":26803,"line_start":940,"line_end":940,"column_start":1,"column_end":38}},{"value":"/ ctx.expect()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26804,"byte_end":26820,"line_start":941,"line_end":941,"column_start":1,"column_end":17}},{"value":"/     .times(2)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26821,"byte_end":26838,"line_start":942,"line_end":942,"column_start":1,"column_end":18}},{"value":"/     .returning(|| MockA::default());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26839,"byte_end":26879,"line_start":943,"line_end":943,"column_start":1,"column_end":41}},{"value":"/ let mut mock0 = MockA::build();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26880,"byte_end":26915,"line_start":944,"line_end":944,"column_start":1,"column_end":36}},{"value":"/ mock0.expect_bar().return_const(4);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26916,"byte_end":26955,"line_start":945,"line_end":945,"column_start":1,"column_end":40}},{"value":"/ mock0.bar();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26956,"byte_end":26972,"line_start":946,"line_end":946,"column_start":1,"column_end":17}},{"value":"/ mock0.checkpoint();     // Does not checkpoint the build method","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":26973,"byte_end":27040,"line_start":947,"line_end":947,"column_start":1,"column_end":68}},{"value":"/ let mock1 = MockA::build();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27041,"byte_end":27072,"line_start":948,"line_end":948,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27073,"byte_end":27080,"line_start":949,"line_end":949,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27081,"byte_end":27088,"line_start":950,"line_end":950,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27089,"byte_end":27092,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ One more thing: Mockall normally creates a zero-argument `new` method for","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27093,"byte_end":27170,"line_start":952,"line_end":952,"column_start":1,"column_end":78}},{"value":"/ every mock struct.  But it *won't* do that when mocking a struct that","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27171,"byte_end":27244,"line_start":953,"line_end":953,"column_start":1,"column_end":74}},{"value":"/ already has a method named `new`.  The `default` method will still be","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27245,"byte_end":27318,"line_start":954,"line_end":954,"column_start":1,"column_end":74}},{"value":"/ present.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27319,"byte_end":27331,"line_start":955,"line_end":955,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27332,"byte_end":27335,"line_start":956,"line_end":956,"column_start":1,"column_end":4}},{"value":"/ ## Modules","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27336,"byte_end":27350,"line_start":957,"line_end":957,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27351,"byte_end":27354,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ In addition to mocking types, Mockall can also derive mocks for","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27355,"byte_end":27422,"line_start":959,"line_end":959,"column_start":1,"column_end":68}},{"value":"/ entire modules of Rust functions.  Mockall will generate a new module named","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27423,"byte_end":27502,"line_start":960,"line_end":960,"column_start":1,"column_end":80}},{"value":"/ \"mock_xxx\", if \"xxx\" is the original module's name.  You can also use","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27503,"byte_end":27576,"line_start":961,"line_end":961,"column_start":1,"column_end":74}},{"value":"/ `#[double]` to selectively import the mock module.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27577,"byte_end":27631,"line_start":962,"line_end":962,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27632,"byte_end":27635,"line_start":963,"line_end":963,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27636,"byte_end":27643,"line_start":964,"line_end":964,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27644,"byte_end":27665,"line_start":965,"line_end":965,"column_start":1,"column_end":22}},{"value":"/ # use mockall_double::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27666,"byte_end":27694,"line_start":966,"line_end":966,"column_start":1,"column_end":29}},{"value":"/ mod outer {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27695,"byte_end":27710,"line_start":967,"line_end":967,"column_start":1,"column_end":16}},{"value":"/     use mockall::automock;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27711,"byte_end":27741,"line_start":968,"line_end":968,"column_start":1,"column_end":31}},{"value":"/     #[automock()]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27742,"byte_end":27763,"line_start":969,"line_end":969,"column_start":1,"column_end":22}},{"value":"/     pub(super) mod inner {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27764,"byte_end":27794,"line_start":970,"line_end":970,"column_start":1,"column_end":31}},{"value":"/         pub fn bar(x: u32) -> i64 {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27795,"byte_end":27834,"line_start":971,"line_end":971,"column_start":1,"column_end":40}},{"value":"/             // ...","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27835,"byte_end":27857,"line_start":972,"line_end":972,"column_start":1,"column_end":23}},{"value":"/             # 4","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27858,"byte_end":27877,"line_start":973,"line_end":973,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27878,"byte_end":27891,"line_start":974,"line_end":974,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27892,"byte_end":27901,"line_start":975,"line_end":975,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27902,"byte_end":27907,"line_start":976,"line_end":976,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27908,"byte_end":27911,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ #[double]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27912,"byte_end":27925,"line_start":978,"line_end":978,"column_start":1,"column_end":14}},{"value":"/ use outer::inner;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27926,"byte_end":27947,"line_start":979,"line_end":979,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27948,"byte_end":27951,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ #[cfg(test)]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27952,"byte_end":27968,"line_start":981,"line_end":981,"column_start":1,"column_end":17}},{"value":"/ mod t {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27969,"byte_end":27980,"line_start":982,"line_end":982,"column_start":1,"column_end":12}},{"value":"/     use super::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":27981,"byte_end":28002,"line_start":983,"line_end":983,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28003,"byte_end":28006,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/     #[test]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28007,"byte_end":28022,"line_start":985,"line_end":985,"column_start":1,"column_end":16}},{"value":"/     fn test_foo_bar() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28023,"byte_end":28050,"line_start":986,"line_end":986,"column_start":1,"column_end":28}},{"value":"/         let ctx = inner::bar_context();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28051,"byte_end":28094,"line_start":987,"line_end":987,"column_start":1,"column_end":44}},{"value":"/         ctx.expect()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28095,"byte_end":28119,"line_start":988,"line_end":988,"column_start":1,"column_end":25}},{"value":"/             .returning(|x| i64::from(x + 1));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28120,"byte_end":28169,"line_start":989,"line_end":989,"column_start":1,"column_end":50}},{"value":"/         assert_eq!(5, inner::bar(4));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28170,"byte_end":28211,"line_start":990,"line_end":990,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28212,"byte_end":28221,"line_start":991,"line_end":991,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28222,"byte_end":28227,"line_start":992,"line_end":992,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28228,"byte_end":28246,"line_start":993,"line_end":993,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28247,"byte_end":28254,"line_start":994,"line_end":994,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28255,"byte_end":28258,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ ### Foreign functions","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28259,"byte_end":28284,"line_start":996,"line_end":996,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28285,"byte_end":28288,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ One reason to mock modules is when working with foreign functions.  Modules","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28289,"byte_end":28368,"line_start":998,"line_end":998,"column_start":1,"column_end":80}},{"value":"/ may contain foreign functions, even though structs and traits may not.  Like","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28369,"byte_end":28449,"line_start":999,"line_end":999,"column_start":1,"column_end":81}},{"value":"/ static methods, the expectations are global.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28450,"byte_end":28498,"line_start":1000,"line_end":1000,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28499,"byte_end":28502,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28503,"byte_end":28510,"line_start":1002,"line_end":1002,"column_start":1,"column_end":8}},{"value":"/ # use mockall_double::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28511,"byte_end":28539,"line_start":1003,"line_end":1003,"column_start":1,"column_end":29}},{"value":"/ mod outer {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28540,"byte_end":28555,"line_start":1004,"line_end":1004,"column_start":1,"column_end":16}},{"value":"/     # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28556,"byte_end":28581,"line_start":1005,"line_end":1005,"column_start":1,"column_end":26}},{"value":"/     #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28582,"byte_end":28601,"line_start":1006,"line_end":1006,"column_start":1,"column_end":20}},{"value":"/     pub mod ffi {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28602,"byte_end":28623,"line_start":1007,"line_end":1007,"column_start":1,"column_end":22}},{"value":"/         extern \"C\" {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28624,"byte_end":28648,"line_start":1008,"line_end":1008,"column_start":1,"column_end":25}},{"value":"/             pub fn foo(x: u32) -> i64;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28649,"byte_end":28691,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}},{"value":"/         }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28692,"byte_end":28705,"line_start":1010,"line_end":1010,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28706,"byte_end":28715,"line_start":1011,"line_end":1011,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28716,"byte_end":28721,"line_start":1012,"line_end":1012,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28722,"byte_end":28725,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ #[double]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28726,"byte_end":28739,"line_start":1014,"line_end":1014,"column_start":1,"column_end":14}},{"value":"/ use outer::ffi;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28740,"byte_end":28759,"line_start":1015,"line_end":1015,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28760,"byte_end":28763,"line_start":1016,"line_end":1016,"column_start":1,"column_end":4}},{"value":"/ fn do_stuff() -> i64 {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28764,"byte_end":28790,"line_start":1017,"line_end":1017,"column_start":1,"column_end":27}},{"value":"/     unsafe{ ffi::foo(42) }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28791,"byte_end":28821,"line_start":1018,"line_end":1018,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28822,"byte_end":28827,"line_start":1019,"line_end":1019,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28828,"byte_end":28831,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ #[cfg(test)]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28832,"byte_end":28848,"line_start":1021,"line_end":1021,"column_start":1,"column_end":17}},{"value":"/ mod t {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28849,"byte_end":28860,"line_start":1022,"line_end":1022,"column_start":1,"column_end":12}},{"value":"/     use super::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28861,"byte_end":28882,"line_start":1023,"line_end":1023,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28883,"byte_end":28886,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/     #[test]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28887,"byte_end":28902,"line_start":1025,"line_end":1025,"column_start":1,"column_end":16}},{"value":"/     fn test_foo() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28903,"byte_end":28926,"line_start":1026,"line_end":1026,"column_start":1,"column_end":24}},{"value":"/         let ctx = ffi::foo_context();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28927,"byte_end":28968,"line_start":1027,"line_end":1027,"column_start":1,"column_end":42}},{"value":"/         ctx.expect()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28969,"byte_end":28993,"line_start":1028,"line_end":1028,"column_start":1,"column_end":25}},{"value":"/             .returning(|x| i64::from(x + 1));","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":28994,"byte_end":29043,"line_start":1029,"line_end":1029,"column_start":1,"column_end":50}},{"value":"/         assert_eq!(43, do_stuff());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29044,"byte_end":29083,"line_start":1030,"line_end":1030,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29084,"byte_end":29093,"line_start":1031,"line_end":1031,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29094,"byte_end":29099,"line_start":1032,"line_end":1032,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29100,"byte_end":29118,"line_start":1033,"line_end":1033,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29119,"byte_end":29126,"line_start":1034,"line_end":1034,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29127,"byte_end":29130,"line_start":1035,"line_end":1035,"column_start":1,"column_end":4}},{"value":"/ ## Debug","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29131,"byte_end":29143,"line_start":1036,"line_end":1036,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29144,"byte_end":29147,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ `#[automock]` will automatically generate `Debug` impls when mocking traits","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29148,"byte_end":29227,"line_start":1038,"line_end":1038,"column_start":1,"column_end":80}},{"value":"/ and struct impls.  `mock!` will too, if you add a `#[derive(Debug)]`, like","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29228,"byte_end":29306,"line_start":1039,"line_end":1039,"column_start":1,"column_end":79}},{"value":"/ this:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29307,"byte_end":29316,"line_start":1040,"line_end":1040,"column_start":1,"column_end":10}},{"value":"/ ```no_run","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29317,"byte_end":29330,"line_start":1041,"line_end":1041,"column_start":1,"column_end":14}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29331,"byte_end":29352,"line_start":1042,"line_end":1042,"column_start":1,"column_end":22}},{"value":"/ mock! {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29353,"byte_end":29364,"line_start":1043,"line_end":1043,"column_start":1,"column_end":12}},{"value":"/     #[derive(Debug)]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29365,"byte_end":29389,"line_start":1044,"line_end":1044,"column_start":1,"column_end":25}},{"value":"/     pub Foo {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29390,"byte_end":29408,"line_start":1045,"line_end":1045,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29409,"byte_end":29414,"line_start":1046,"line_end":1046,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29415,"byte_end":29432,"line_start":1047,"line_end":1047,"column_start":1,"column_end":18}},{"value":"/ #     format!(\"{:?}\", &MockFoo::default());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29433,"byte_end":29480,"line_start":1048,"line_end":1048,"column_start":1,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29481,"byte_end":29488,"line_start":1049,"line_end":1049,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29489,"byte_end":29496,"line_start":1050,"line_end":1050,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29497,"byte_end":29500,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ ## Async Traits","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29501,"byte_end":29520,"line_start":1052,"line_end":1052,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29521,"byte_end":29524,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ Async traits aren't yet (as of 1.47.0) a part of the Rust language.  But","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29525,"byte_end":29601,"line_start":1054,"line_end":1054,"column_start":1,"column_end":77}},{"value":"/ they're available from the","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29602,"byte_end":29632,"line_start":1055,"line_end":1055,"column_start":1,"column_end":31}},{"value":"/ [`async_trait`](https://docs.rs/async-trait/0.1.38/async_trait/) crate.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29633,"byte_end":29708,"line_start":1056,"line_end":1056,"column_start":1,"column_end":76}},{"value":"/ Mockall is compatible with this crate, with two important limitations:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29709,"byte_end":29783,"line_start":1057,"line_end":1057,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29784,"byte_end":29787,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ * The `#[automock]` attribute must appear _before_ the `#[async_trait]`","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29788,"byte_end":29863,"line_start":1059,"line_end":1059,"column_start":1,"column_end":76}},{"value":"/ attribute.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29864,"byte_end":29878,"line_start":1060,"line_end":1060,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29879,"byte_end":29882,"line_start":1061,"line_end":1061,"column_start":1,"column_end":4}},{"value":"/ * The `#[async_trait]` macro must be imported with its canonical name.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29883,"byte_end":29957,"line_start":1062,"line_end":1062,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29958,"byte_end":29961,"line_start":1063,"line_end":1063,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29962,"byte_end":29969,"line_start":1064,"line_end":1064,"column_start":1,"column_end":8}},{"value":"/ # use async_trait::async_trait;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":29970,"byte_end":30005,"line_start":1065,"line_end":1065,"column_start":1,"column_end":36}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30006,"byte_end":30027,"line_start":1066,"line_end":1066,"column_start":1,"column_end":22}},{"value":"/ // async_trait works with both #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30028,"byte_end":30074,"line_start":1067,"line_end":1067,"column_start":1,"column_end":47}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30075,"byte_end":30090,"line_start":1068,"line_end":1068,"column_start":1,"column_end":16}},{"value":"/ #[async_trait]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30091,"byte_end":30109,"line_start":1069,"line_end":1069,"column_start":1,"column_end":19}},{"value":"/ pub trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30110,"byte_end":30129,"line_start":1070,"line_end":1070,"column_start":1,"column_end":20}},{"value":"/    async fn foo(&self) -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30130,"byte_end":30164,"line_start":1071,"line_end":1071,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30165,"byte_end":30170,"line_start":1072,"line_end":1072,"column_start":1,"column_end":6}},{"value":"/ // and mock!","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30171,"byte_end":30187,"line_start":1073,"line_end":1073,"column_start":1,"column_end":17}},{"value":"/ mock! {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30188,"byte_end":30199,"line_start":1074,"line_end":1074,"column_start":1,"column_end":12}},{"value":"/     pub Bar {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30200,"byte_end":30218,"line_start":1075,"line_end":1075,"column_start":1,"column_end":19}},{"value":"/     #[async_trait]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30219,"byte_end":30241,"line_start":1076,"line_end":1076,"column_start":1,"column_end":23}},{"value":"/     impl Foo for Bar {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30242,"byte_end":30268,"line_start":1077,"line_end":1077,"column_start":1,"column_end":27}},{"value":"/         async fn foo(&self) -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30269,"byte_end":30308,"line_start":1078,"line_end":1078,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30309,"byte_end":30318,"line_start":1079,"line_end":1079,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30319,"byte_end":30324,"line_start":1080,"line_end":1080,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30325,"byte_end":30343,"line_start":1081,"line_end":1081,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30344,"byte_end":30351,"line_start":1082,"line_end":1082,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30352,"byte_end":30355,"line_start":1083,"line_end":1083,"column_start":1,"column_end":4}},{"value":"/ ## Crate features","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30356,"byte_end":30377,"line_start":1084,"line_end":1084,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30378,"byte_end":30381,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ Mockall has a **nightly** feature.  Currently this feature has two","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30382,"byte_end":30452,"line_start":1086,"line_end":1086,"column_start":1,"column_end":71}},{"value":"/ effects:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30453,"byte_end":30465,"line_start":1087,"line_end":1087,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30466,"byte_end":30469,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ * The compiler will produce better error messages.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30470,"byte_end":30524,"line_start":1089,"line_end":1089,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30525,"byte_end":30528,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ * Expectations for methods whose return type implements `Default` needn't","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30529,"byte_end":30606,"line_start":1091,"line_end":1091,"column_start":1,"column_end":78}},{"value":"/   have their return values explicitly set.  Instead, they will automatically","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30607,"byte_end":30687,"line_start":1092,"line_end":1092,"column_start":1,"column_end":81}},{"value":"/   return the default value.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30688,"byte_end":30719,"line_start":1093,"line_end":1093,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30720,"byte_end":30723,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ With **nightly** enabled, you can omit the return value like this:","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30724,"byte_end":30794,"line_start":1095,"line_end":1095,"column_start":1,"column_end":71}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30906,"byte_end":30927,"line_start":1098,"line_end":1098,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30928,"byte_end":30943,"line_start":1099,"line_end":1099,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30944,"byte_end":30959,"line_start":1100,"line_end":1100,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self) -> Vec<u32>;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30960,"byte_end":30994,"line_start":1101,"line_end":1101,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":30995,"byte_end":31000,"line_start":1102,"line_end":1102,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31001,"byte_end":31004,"line_start":1103,"line_end":1103,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31005,"byte_end":31039,"line_start":1104,"line_end":1104,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31040,"byte_end":31062,"line_start":1105,"line_end":1105,"column_start":1,"column_end":23}},{"value":"/ assert!(mock.foo().is_empty());","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31063,"byte_end":31098,"line_start":1106,"line_end":1106,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31099,"byte_end":31106,"line_start":1107,"line_end":1107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31107,"byte_end":31110,"line_start":1108,"line_end":1108,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31111,"byte_end":31126,"line_start":1109,"line_end":1109,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31127,"byte_end":31130,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ For additional examples of Mockall in action, including detailed","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31131,"byte_end":31199,"line_start":1111,"line_end":1111,"column_start":1,"column_end":69}},{"value":"/ documentation on the autogenerated methods, see","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31200,"byte_end":31251,"line_start":1112,"line_end":1112,"column_start":1,"column_end":52}},{"value":"/ [`examples`](examples).","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31252,"byte_end":31279,"line_start":1113,"line_end":1113,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31280,"byte_end":31283,"line_start":1114,"line_end":1114,"column_start":1,"column_end":4}},{"value":"/ [`Predicate`]: trait.Predicate.html","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31284,"byte_end":31323,"line_start":1115,"line_end":1115,"column_start":1,"column_end":40}},{"value":"/ [`Sequence`]: Sequence","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31324,"byte_end":31350,"line_start":1116,"line_end":1116,"column_start":1,"column_end":27}},{"value":"/ [`cfg-if`]: https://crates.io/crates/cfg-if","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31351,"byte_end":31398,"line_start":1117,"line_end":1117,"column_start":1,"column_end":48}},{"value":"/ [`function`]: predicate/fn.function.html","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31399,"byte_end":31443,"line_start":1118,"line_end":1118,"column_start":1,"column_end":45}},{"value":"/ [`mock!`]: macro.mock.html","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31444,"byte_end":31474,"line_start":1119,"line_end":1119,"column_start":1,"column_end":31}},{"value":"/ [`predicate`]: predicate/index.html","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31475,"byte_end":31514,"line_start":1120,"line_end":1120,"column_start":1,"column_end":40}},{"value":"warn(missing_docs)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":31864,"byte_end":31886,"line_start":1129,"line_end":1129,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":36991,"byte_end":37006,"line_start":1332,"line_end":1332,"column_start":11,"column_end":26},"name":"AnyExpectations","qualname":"::AnyExpectations","value":"AnyExpectations: Any + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":37088,"byte_end":37101,"line_start":1336,"line_end":1336,"column_start":11,"column_end":24},"name":"ReturnDefault","qualname":"::ReturnDefault","value":"ReturnDefault<O>","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":37114,"byte_end":37134,"line_start":1337,"line_end":1337,"column_start":8,"column_end":28},"name":"maybe_return_default","qualname":"::ReturnDefault::maybe_return_default","value":"pub fn maybe_return_default() -> Option<O>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":37158,"byte_end":37172,"line_start":1338,"line_end":1338,"column_start":8,"column_end":22},"name":"return_default","qualname":"::ReturnDefault::return_default","value":"pub fn return_default() -> Result<O, &'static str>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":37251,"byte_end":37266,"line_start":1343,"line_end":1343,"column_start":12,"column_end":27},"name":"DefaultReturner","qualname":"::DefaultReturner","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":38330,"byte_end":38343,"line_start":1380,"line_end":1380,"column_start":12,"column_end":25},"name":"MaybeDebugger","qualname":"::MaybeDebugger","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":102},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":38351,"byte_end":38360,"line_start":1380,"line_end":1380,"column_start":33,"column_end":42},"name":"0","qualname":"::MaybeDebugger::0","value":"&'a T","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39177,"byte_end":39187,"line_start":1408,"line_end":1408,"column_start":12,"column_end":22},"name":"TimesRange","qualname":"::TimesRange","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":40475,"byte_end":40480,"line_start":1463,"line_end":1463,"column_start":12,"column_end":17},"name":"Times","qualname":"::Times","value":"Times {  }","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":40634,"byte_end":40638,"line_start":1471,"line_end":1471,"column_start":12,"column_end":16},"name":"call","qualname":"<Times>::call","value":"pub fn call(&Self) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41167,"byte_end":41170,"line_start":1488,"line_end":1488,"column_start":12,"column_end":15},"name":"any","qualname":"<Times>::any","value":"pub fn any(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41311,"byte_end":41316,"line_start":1493,"line_end":1493,"column_start":12,"column_end":17},"name":"count","qualname":"<Times>::count","value":"pub fn count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return how many times this expectation has been called\n","sig":null,"attributes":[{"value":"/ Return how many times this expectation has been called","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41241,"byte_end":41299,"line_start":1492,"line_end":1492,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41490,"byte_end":41497,"line_start":1499,"line_end":1499,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Times>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has this expectation already been called the maximum allowed number of\n times?\n","sig":null,"attributes":[{"value":"/ Has this expectation already been called the maximum allowed number of","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41389,"byte_end":41463,"line_start":1497,"line_end":1497,"column_start":5,"column_end":79}},{"value":"/ times?","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41468,"byte_end":41478,"line_start":1498,"line_end":1498,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41739,"byte_end":41747,"line_start":1505,"line_end":1505,"column_start":12,"column_end":20},"name":"is_exact","qualname":"<Times>::is_exact","value":"pub fn is_exact(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is it required that this expectation be called an exact number of times,\n or may it be satisfied by a range of call counts?\n","sig":null,"attributes":[{"value":"/ Is it required that this expectation be called an exact number of times,","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41593,"byte_end":41669,"line_start":1503,"line_end":1503,"column_start":5,"column_end":81}},{"value":"/ or may it be satisfied by a range of call counts?","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41674,"byte_end":41727,"line_start":1504,"line_end":1504,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41931,"byte_end":41943,"line_start":1511,"line_end":1511,"column_start":12,"column_end":24},"name":"is_satisfied","qualname":"<Times>::is_satisfied","value":"pub fn is_satisfied(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has this expectation already been called the minimum required number of\n times?\n","sig":null,"attributes":[{"value":"/ Has this expectation already been called the minimum required number of","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41829,"byte_end":41904,"line_start":1509,"line_end":1509,"column_start":5,"column_end":80}},{"value":"/ times?","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":41909,"byte_end":41919,"line_start":1510,"line_end":1510,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42117,"byte_end":42124,"line_start":1516,"line_end":1516,"column_start":12,"column_end":19},"name":"minimum","qualname":"<Times>::minimum","value":"pub fn minimum(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The minimum number of times that this expectation must be called\n","sig":null,"attributes":[{"value":"/ The minimum number of times that this expectation must be called","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42037,"byte_end":42105,"line_start":1515,"line_end":1515,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42285,"byte_end":42286,"line_start":1522,"line_end":1522,"column_start":12,"column_end":13},"name":"n","qualname":"<Times>::n","value":"pub fn n(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: range_plus_one)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42241,"byte_end":42273,"line_start":1521,"line_end":1521,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42361,"byte_end":42366,"line_start":1526,"line_end":1526,"column_start":12,"column_end":17},"name":"never","qualname":"<Times>::never","value":"pub fn never(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42427,"byte_end":42432,"line_start":1530,"line_end":1530,"column_start":12,"column_end":17},"name":"range","qualname":"<Times>::range","value":"pub fn range(&mut Self, Range<usize>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42576,"byte_end":42581,"line_start":1535,"line_end":1535,"column_start":12,"column_end":17},"name":"times","qualname":"<Times>::times","value":"pub fn times<T: Into<TimesRange>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":187},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42801,"byte_end":42804,"line_start":1543,"line_end":1543,"column_start":12,"column_end":15},"name":"Key","qualname":"::Key","value":"","parent":null,"children":[],"decl_id":null,"docs":" Non-generic keys to `GenericExpectation` internal storage\n","sig":null,"attributes":[{"value":"/ Non-generic keys to `GenericExpectation` internal storage","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42662,"byte_end":42723,"line_start":1540,"line_end":1540,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42857,"byte_end":42860,"line_start":1547,"line_end":1547,"column_start":12,"column_end":15},"name":"new","qualname":"<Key>::new","value":"pub fn new<T: 'static>() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42956,"byte_end":42965,"line_start":1553,"line_end":1553,"column_start":12,"column_end":21},"name":"SeqHandle","qualname":"::SeqHandle","value":"SeqHandle {  }","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43113,"byte_end":43120,"line_start":1560,"line_end":1560,"column_start":12,"column_end":19},"name":"satisfy","qualname":"<SeqHandle>::satisfy","value":"pub fn satisfy(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Tell the Sequence that this expectation has been fully satisfied\n","sig":null,"attributes":[{"value":"/ Tell the Sequence that this expectation has been fully satisfied","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43033,"byte_end":43101,"line_start":1559,"line_end":1559,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43250,"byte_end":43256,"line_start":1565,"line_end":1565,"column_start":12,"column_end":18},"name":"verify","qualname":"<SeqHandle>::verify","value":"pub fn verify(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Verify that this handle was called in the correct order\n","sig":null,"attributes":[{"value":"/ Verify that this handle was called in the correct order","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43179,"byte_end":43238,"line_start":1564,"line_end":1564,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45168,"byte_end":45176,"line_start":1637,"line_end":1637,"column_start":12,"column_end":20},"name":"Sequence","qualname":"::Sequence","value":"Sequence {  }","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"decl_id":null,"docs":" Used to enforce that mock calls must happen in the sequence specified.","sig":null,"attributes":[{"value":"/ Used to enforce that mock calls must happen in the sequence specified.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43986,"byte_end":44060,"line_start":1589,"line_end":1589,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44061,"byte_end":44064,"line_start":1590,"line_end":1590,"column_start":1,"column_end":4}},{"value":"/ Each expectation must expect to be called a fixed number of times.  Once","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44065,"byte_end":44141,"line_start":1591,"line_end":1591,"column_start":1,"column_end":77}},{"value":"/ satisfied, the next expectation in the sequence will expect to be called.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44142,"byte_end":44219,"line_start":1592,"line_end":1592,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44220,"byte_end":44223,"line_start":1593,"line_end":1593,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44224,"byte_end":44238,"line_start":1594,"line_end":1594,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44239,"byte_end":44246,"line_start":1595,"line_end":1595,"column_start":1,"column_end":8}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44247,"byte_end":44268,"line_start":1596,"line_end":1596,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44269,"byte_end":44284,"line_start":1597,"line_end":1597,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44285,"byte_end":44300,"line_start":1598,"line_end":1598,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44301,"byte_end":44323,"line_start":1599,"line_end":1599,"column_start":1,"column_end":23}},{"value":"/     fn bar(&self) -> u32;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44324,"byte_end":44353,"line_start":1600,"line_end":1600,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44354,"byte_end":44359,"line_start":1601,"line_end":1601,"column_start":1,"column_end":6}},{"value":"/ let mut seq = Sequence::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44360,"byte_end":44394,"line_start":1602,"line_end":1602,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44395,"byte_end":44398,"line_start":1603,"line_end":1603,"column_start":1,"column_end":4}},{"value":"/ let mut mock0 = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44399,"byte_end":44434,"line_start":1604,"line_end":1604,"column_start":1,"column_end":36}},{"value":"/ let mut mock1 = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44435,"byte_end":44470,"line_start":1605,"line_end":1605,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44471,"byte_end":44474,"line_start":1606,"line_end":1606,"column_start":1,"column_end":4}},{"value":"/ mock0.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44475,"byte_end":44497,"line_start":1607,"line_end":1607,"column_start":1,"column_end":23}},{"value":"/     .times(1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44498,"byte_end":44515,"line_start":1608,"line_end":1608,"column_start":1,"column_end":18}},{"value":"/     .returning(|| ())","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44516,"byte_end":44541,"line_start":1609,"line_end":1609,"column_start":1,"column_end":26}},{"value":"/     .in_sequence(&mut seq);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44542,"byte_end":44573,"line_start":1610,"line_end":1610,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44574,"byte_end":44577,"line_start":1611,"line_end":1611,"column_start":1,"column_end":4}},{"value":"/ mock1.expect_bar()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44578,"byte_end":44600,"line_start":1612,"line_end":1612,"column_start":1,"column_end":23}},{"value":"/     .times(1)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44601,"byte_end":44618,"line_start":1613,"line_end":1613,"column_start":1,"column_end":18}},{"value":"/     .returning(|| 42)","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44619,"byte_end":44644,"line_start":1614,"line_end":1614,"column_start":1,"column_end":26}},{"value":"/     .in_sequence(&mut seq);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44645,"byte_end":44676,"line_start":1615,"line_end":1615,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44677,"byte_end":44680,"line_start":1616,"line_end":1616,"column_start":1,"column_end":4}},{"value":"/ mock0.foo();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44681,"byte_end":44697,"line_start":1617,"line_end":1617,"column_start":1,"column_end":17}},{"value":"/ mock1.bar();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44698,"byte_end":44714,"line_start":1618,"line_end":1618,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44715,"byte_end":44722,"line_start":1619,"line_end":1619,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44723,"byte_end":44726,"line_start":1620,"line_end":1620,"column_start":1,"column_end":4}},{"value":"/ It is an error to add an expectation to a `Sequence` if its call count is","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44727,"byte_end":44804,"line_start":1621,"line_end":1621,"column_start":1,"column_end":78}},{"value":"/ unspecified.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44805,"byte_end":44821,"line_start":1622,"line_end":1622,"column_start":1,"column_end":17}},{"value":"/ ```should_panic(expected = \"with an exact call count\")","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44822,"byte_end":44880,"line_start":1623,"line_end":1623,"column_start":1,"column_end":59}},{"value":"/ # use mockall::*;","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44881,"byte_end":44902,"line_start":1624,"line_end":1624,"column_start":1,"column_end":22}},{"value":"/ #[automock]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44903,"byte_end":44918,"line_start":1625,"line_end":1625,"column_start":1,"column_end":16}},{"value":"/ trait Foo {","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44919,"byte_end":44934,"line_start":1626,"line_end":1626,"column_start":1,"column_end":16}},{"value":"/     fn foo(&self);","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44935,"byte_end":44957,"line_start":1627,"line_end":1627,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44958,"byte_end":44963,"line_start":1628,"line_end":1628,"column_start":1,"column_end":6}},{"value":"/ let mut seq = Sequence::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44964,"byte_end":44998,"line_start":1629,"line_end":1629,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":44999,"byte_end":45002,"line_start":1630,"line_end":1630,"column_start":1,"column_end":4}},{"value":"/ let mut mock = MockFoo::new();","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45003,"byte_end":45037,"line_start":1631,"line_end":1631,"column_start":1,"column_end":35}},{"value":"/ mock.expect_foo()","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45038,"byte_end":45059,"line_start":1632,"line_end":1632,"column_start":1,"column_end":22}},{"value":"/     .returning(|| ())","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45060,"byte_end":45085,"line_start":1633,"line_end":1633,"column_start":1,"column_end":26}},{"value":"/     .in_sequence(&mut seq);  // panics!","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45086,"byte_end":45129,"line_start":1634,"line_end":1634,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45130,"byte_end":45137,"line_start":1635,"line_end":1635,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45296,"byte_end":45299,"line_start":1644,"line_end":1644,"column_start":12,"column_end":15},"name":"new","qualname":"<Sequence>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty [`Sequence`]\n","sig":null,"attributes":[{"value":"/ Create a new empty [`Sequence`]","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45249,"byte_end":45284,"line_start":1643,"line_end":1643,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45474,"byte_end":45485,"line_start":1651,"line_end":1651,"column_start":12,"column_end":23},"name":"next_handle","qualname":"<Sequence>::next_handle","value":"pub fn next_handle(&mut Self) -> SeqHandle","parent":null,"children":[],"decl_id":null,"docs":" Not for public consumption, but it must be public so the generated code\n can call it.\n","sig":null,"attributes":[{"value":"/ Not for public consumption, but it must be public so the generated code","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45347,"byte_end":45422,"line_start":1648,"line_end":1648,"column_start":5,"column_end":80}},{"value":"/ can call it.","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45427,"byte_end":45443,"line_start":1649,"line_end":1649,"column_start":5,"column_end":21}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":38019,"byte_end":38034,"line_start":1367,"line_end":1367,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":38875,"byte_end":38888,"line_start":1396,"line_end":1396,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39221,"byte_end":39231,"line_start":1410,"line_end":1410,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39388,"byte_end":39398,"line_start":1417,"line_end":1417,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39505,"byte_end":39515,"line_start":1423,"line_end":1423,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39679,"byte_end":39689,"line_start":1430,"line_end":1430,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39823,"byte_end":39833,"line_start":1436,"line_end":1436,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39966,"byte_end":39976,"line_start":1442,"line_end":1442,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":40175,"byte_end":40185,"line_start":1449,"line_end":1449,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":40312,"byte_end":40322,"line_start":1455,"line_end":1455,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":40615,"byte_end":40620,"line_start":1470,"line_end":1470,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42840,"byte_end":42843,"line_start":1546,"line_end":1546,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43017,"byte_end":43026,"line_start":1558,"line_end":1558,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43412,"byte_end":43420,"line_start":1575,"line_end":1575,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45234,"byte_end":45242,"line_start":1642,"line_end":1642,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":37009,"byte_end":37012,"line_start":1332,"line_end":1332,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":20,"index":33},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":37015,"byte_end":37019,"line_start":1332,"line_end":1332,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":37022,"byte_end":37026,"line_start":1332,"line_end":1332,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":38019,"byte_end":38034,"line_start":1367,"line_end":1367,"column_start":38,"column_end":53},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":160},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":38875,"byte_end":38888,"line_start":1396,"line_end":1396,"column_start":31,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39221,"byte_end":39231,"line_start":1410,"line_end":1410,"column_start":18,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39388,"byte_end":39398,"line_start":1417,"line_end":1417,"column_start":22,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39505,"byte_end":39515,"line_start":1423,"line_end":1423,"column_start":29,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39679,"byte_end":39689,"line_start":1430,"line_end":1430,"column_start":33,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39823,"byte_end":39833,"line_start":1436,"line_end":1436,"column_start":26,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":39966,"byte_end":39976,"line_start":1442,"line_end":1442,"column_start":38,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":40175,"byte_end":40185,"line_start":1449,"line_end":1449,"column_start":31,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":40312,"byte_end":40322,"line_start":1455,"line_end":1455,"column_start":40,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":40615,"byte_end":40620,"line_start":1470,"line_end":1470,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":42840,"byte_end":42843,"line_start":1546,"line_end":1546,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43017,"byte_end":43026,"line_start":1558,"line_end":1558,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":43412,"byte_end":43420,"line_start":1575,"line_end":1575,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gabriel/.cargo/registry/src/github.com-1ecc6299db9ec823/mockall-0.11.0/src/lib.rs","byte_start":45234,"byte_end":45242,"line_start":1642,"line_end":1642,"column_start":6,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}}]}